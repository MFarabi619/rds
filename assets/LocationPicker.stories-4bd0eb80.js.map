{"version":3,"file":"LocationPicker.stories-4bd0eb80.js","sources":["../../src/components/LocationPicker/LocationPicker.tsx"],"sourcesContent":["import { Combobox } from '@headlessui/react'\nimport { MagnifyingGlassIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport { useEffect, useState } from 'react'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\n\nexport interface LocationPickerProps {\n  posCallback?: any\n  centerCallback?: any\n  singleMarker?: boolean\n  singleMarkerCallback?: any\n}\n\nexport const LocationPicker = ({\n  posCallback,\n  centerCallback,\n  singleMarker,\n  singleMarkerCallback,\n}: LocationPickerProps) => {\n  const [address, setAddress] = useState('')\n  const [center, setCenter] = useState<{ lat: number; lng: number }>({\n    lat: 45.3850225,\n    lng: -75.6946679,\n  })\n  const [pos, setPos] = useState<{ name: string; id: string; position: object }[]>([])\n  const [coordinates, setCoordinates] = useState({\n    lat: 45.3850225,\n    lng: -75.6946679,\n  })\n\n  const handleSelect = async (value: string) => {\n    const results = await geocodeByAddress(value)\n    const latLng = await getLatLng(results[0])\n    const placeID = results[0].place_id\n    setAddress(value)\n    setCenter({ lat: latLng.lat, lng: latLng.lng })\n    setPos([...pos, { name: value, id: placeID, position: latLng }])\n    setCoordinates(latLng)\n  }\n\n  useEffect(() => {\n    if (posCallback) posCallback(pos)\n  }, [pos, posCallback])\n\n  useEffect(() => {\n    if (centerCallback) centerCallback(center)\n  }, [center, centerCallback])\n\n  useEffect(() => {\n    if (singleMarker && singleMarkerCallback) singleMarkerCallback({ coordinates, address: address })\n  }, [coordinates, singleMarkerCallback, singleMarker])\n\n  return (\n    <div className=\"not-prose\">\n      <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\n        {({ getInputProps, suggestions, getSuggestionItemProps }) => (\n          <Combobox value={address} onChange={handleSelect}>\n            <div className=\"relative\">\n              <MagnifyingGlassIcon\n                className=\"pointer-events-none absolute top-3.5 left-3.5 h-5 w-5 text-cu-black-400\"\n                aria-hidden=\"true\"\n              />\n              <Combobox.Input\n                className=\"h-12 w-full rounded-lg border border-cu-black-200 bg-white pl-10 pr-4 text-cu-black-800 placeholder-cu-black-400 focus:border-cu-black-400 focus:outline-none focus:ring-0 sm:text-sm\"\n                {...getInputProps({ placeholder: 'Type address' })}\n              />\n              {address && (\n                <XMarkIcon\n                  className=\"absolute top-3.5 right-3.5 h-5 w-5 text-cu-black-400\"\n                  aria-hidden=\"true\"\n                  onClick={() => {\n                    setAddress('')\n                  }}\n                />\n              )}\n            </div>\n            <Combobox.Options className=\"mt-3 max-h-80 divide-y divide-cu-black-100 overflow-y-auto bg-white px-1.5 text-sm text-cu-black-800\">\n              {suggestions.map((suggestion) => {\n                return (\n                  <Combobox.Option key={suggestion.index} value={suggestion}>\n                    {({ active }) => (\n                      <ul>\n                        <li\n                          {...getSuggestionItemProps(suggestion)}\n                          className={`p-4 text-cu-black-600 hover:cursor-pointer ${\n                            active ? 'bg-cu-black-50 text-cu-black-900' : 'bg-white'\n                          }`}\n                        >\n                          {suggestion.description}\n                        </li>\n                      </ul>\n                    )}\n                  </Combobox.Option>\n                )\n              })}\n            </Combobox.Options>\n          </Combobox>\n        )}\n      </PlacesAutocomplete>\n    </div>\n  )\n}\n"],"names":["LocationPicker","posCallback","centerCallback","singleMarker","singleMarkerCallback","address","setAddress","useState","center","setCenter","pos","setPos","coordinates","setCoordinates","handleSelect","value","results","geocodeByAddress","latLng","getLatLng","placeID","useEffect","jsx","PlacesAutocomplete","getInputProps","suggestions","getSuggestionItemProps","jsxs","Combobox","MagnifyingGlassIcon","XMarkIcon","suggestion","active"],"mappings":"4nBAYO,MAAAA,EAAA,CAAA,CAAwB,YAAAC,EAC7B,eAAAC,EACA,aAAAC,EACA,qBAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAA,CAAmE,IAAA,WAC5D,IAAA,WACA,CAAA,EAEP,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,CAAA,CAAA,EACA,CAAAK,EAAAC,CAAA,EAAAN,WAAA,CAA+C,IAAA,WACxC,IAAA,WACA,CAAA,EAGPO,EAAA,MAAAC,GAAA,CACE,MAAAC,EAAA,MAAAC,EAAAF,CAAA,EACAG,EAAA,MAAAC,EAAAH,EAAA,CAAA,CAAA,EACAI,EAAAJ,EAAA,CAAA,EAAA,SACAV,EAAAS,CAAA,EACAN,EAAA,CAAA,IAAAS,EAAA,IAAA,IAAAA,EAAA,GAAA,CAAA,EACAP,EAAA,CAAA,GAAAD,EAAA,CAAA,KAAAK,EAAA,GAAAK,EAAA,SAAAF,CAAA,CAAA,CAAA,EACAL,EAAAK,CAAA,CAAqB,EAGvBG,OAAAA,EAAAA,UAAA,IAAA,CACEpB,GAAiBA,EAAAS,CAAA,CAAe,EAAA,CAAAA,EAAAT,CAAA,CAAA,EAGlCoB,EAAAA,UAAA,IAAA,CACEnB,GAAoBA,EAAAM,CAAA,CAAqB,EAAA,CAAAA,EAAAN,CAAA,CAAA,EAG3CmB,EAAAA,UAAA,IAAA,CACElB,GAAAC,GAA0CA,EAAA,CAAA,YAAAQ,EAAA,QAAAP,CAAA,CAAA,CAAsD,EAAA,CAAAO,EAAAR,EAAAD,CAAA,CAAA,EAGlGmB,EAAA,MAAA,CAAA,UAAA,YAAA,SAAAA,EAAAC,EAAA,CAAA,MAAAlB,EAAA,SAAAC,EAAA,SAAAQ,EAAA,SAAA,CAAA,CAAA,cAAAU,EAAA,YAAAC,EAAA,uBAAAC,CAAA,IAAAC,EAAAC,EAAA,CAAA,MAAAvB,EAAA,SAAAS,EAAA,SAAA,CAKUa,EAAA,MAAA,CAAA,UAAA,WAAA,SAAA,CACEL,EAAAO,EAAC,CAAA,UAAA,0EACW,cAAA,MACE,CAAA,EACdP,EACAM,EAAA,MAAU,CAAT,UAAA,wLACW,GAAAJ,EAAA,CAAA,YAAA,eAAA,CACuC,CAAA,EACnDnB,GAAAiB,EAEEQ,EAAC,CAAA,UAAA,uDACW,cAAA,OACE,QAAA,IAAA,CAEVxB,EAAA,EAAA,CAAa,CACf,CAAA,CACF,EAAA,EAEJgB,EAAAM,EAAA,QAAA,CAAA,UAAA,uGAAA,SAAAH,EAAA,IAAAM,GAGIT,EAAAM,EAAA,OAAA,CAAA,MAAAG,EAAA,SAAA,CAAA,CAAA,OAAAC,CAAA,IAAAV,EAAA,KAAA,CAAA,SAAAA,EAIQ,KAAC,CAAA,GAAAI,EAAAK,CAAA,EACsC,UAAA,8CAAAC,EAAA,mCAAA,aAEW,SAAAD,EAAA,WAGpC,CAAA,CAAA,CAAA,CAAA,EAAAA,EAAA,KAAA,CAIpB,EAAA,CAGN,EAAA,CAAA,CAAA,CAAA,CAAA,CAMZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}