import{j as e}from"./jsx-runtime-X2b_N9AH.js";import{r as a}from"./index-uCp2LrAq.js";import{B as d}from"./Button-BbqjxLtd.js";import{B as j}from"./ButtonGroup-D-bd2cm2.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Icon-CS9Mqat_.js";import"./optionClasses-C1xmOtGn.js";const l=({children:n,title:t,description:p,isOpen:c,setIsOpen:u})=>{const o=a.useRef(null);a.useEffect(()=>{var r,m,g,D;(r=o.current)!=null&&r.open&&!c?(m=o.current)==null||m.close():!((g=o.current)!=null&&g.open)&&c&&((D=o.current)==null||D.showModal())},[c]);const N=r=>{r.target===o.current&&u(!0)};return e.jsxs("dialog",{ref:o,className:"cu-dialog z-10 not-prose min-w-96 max-w-5xl shadow-md rounded-md p-3.5",onClick:N,children:[e.jsxs("div",{className:"p-3",children:[e.jsx("h3",{className:"text-lg font-medium leading-6 text-gray-900 mb-3",children:t}),p&&e.jsx("p",{className:"text-sm text-gray-500 mb-3",children:p})]}),e.jsxs(j,{align:"right",gap:3,children:[n,e.jsx(d,{onClick:()=>{u(!1)},title:"Close",isSmall:!0,color:"grey"})]})]})};l.__docgenInfo={description:"",methods:[],displayName:"Dialog",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},title:{required:!0,tsType:{name:"string"},description:""},description:{required:!1,tsType:{name:"string"},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},setIsOpen:{required:!0,tsType:{name:"signature",type:"function",raw:"(k: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"k"}],return:{name:"void"}}},description:""}}};const S={title:"Components/Dialog",component:l,tags:["autodocs"],parameters:{controls:{sort:"requiredFirst"}}},i=()=>{const[n,t]=a.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(d,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>t(!0)}),e.jsx(l,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:n,setIsOpen:t})]})},s=()=>{const[n,t]=a.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(d,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>t(!0)}),e.jsx(l,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:n,setIsOpen:t,noOutsideClose:!0})]})};i.storyName="Default Dialog";s.storyName="No Outside Click Closing of Dialog";i.__docgenInfo={description:"",methods:[],displayName:"Default"};s.__docgenInfo={description:"",methods:[],displayName:"NoOutsideClose"};var O,f,x;i.parameters={...i.parameters,docs:{...(O=i.parameters)==null?void 0:O.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />

      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen}></Dialog>
    </>;
}`,...(x=(f=i.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};var h,C,y;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />

      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen} noOutsideClose></Dialog>
    </>;
}`,...(y=(C=s.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};const q=["Default","NoOutsideClose"];export{i as Default,s as NoOutsideClose,q as __namedExportsOrder,S as default};
