{"version":3,"file":"Avatar-a8f84b1b.js","sources":["../../src/components/Avatar/Avatar.styles.tsx","../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["const styles = {\n  core: `not-prose inline-block bg-cu-black-50 text-cu-black-800 overflow-hidden focus:ring-2 focus:ring-cu-black-100 focus:ring-offset-2`,\n  'no-image': `bg-cu-black-100 flex items-center justify-center font-semibold`,\n  shadow: `shadow-lg`,\n}\nexport default styles\n","import React from 'react'\nimport styles from './Avatar.styles'\nimport { rdsRounded, rdsBorderWidth, rdsBorderColor } from '../../utils/tailwindClasses'\n\nexport type ImageType = {\n  src: string | undefined\n  alt: string | undefined\n  width?: string\n  height?: string\n  className?: string\n}\n\nexport type UserInfoType = {\n  firstName: string\n  lastName: string\n  image?: ImageType\n  info?: React.ReactNode\n}\n\nexport interface AvatarProps {\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '4xl'\n  rounded?: 'lg' | 'full'\n  borderWidth?: '1' | '2' | '4' | '8'\n  borderColor?: 'black' | 'white' | 'red' | 'grey' | 'dark-grey'\n  hasShadow?: boolean\n  user: UserInfoType\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n}\n\nconst avatarSizes = {\n  xs: `text-xs h-8 w-8`,\n  sm: `text-base h-16 w-16`,\n  md: `text-lg h-24 w-24`,\n  lg: `text-2xl h-32 w-32`,\n  xl: `text-4xl h-40 w-40`,\n  '2xl': `text-6xl h-48 w-48`,\n  '4xl': 'text-7xl h-56 w-56',\n}\n\nexport const Avatar = ({ size = 'xl', rounded, borderWidth, borderColor, hasShadow, user, onClick }: AvatarProps) => {\n  const { firstName, lastName, image } = user\n  const initials = `${firstName.split('')[0]}${lastName.split('')[0]}`\n  const shadowStyle = hasShadow ? styles.shadow : ''\n  const roundedStyle = rounded ? rdsRounded[rounded] : ''\n  const borderWidthStyle = borderWidth ? rdsBorderWidth[borderWidth] : ''\n  const borderColorStyle = borderColor ? rdsBorderColor[borderColor] : ''\n  const hasOnClick = onClick ? 'cursor-pointer' : ''\n\n  return (\n    <>\n      {image && (\n        <img\n          className={`${styles.core} ${avatarSizes[size]} ${roundedStyle} ${borderWidthStyle} ${borderColorStyle} ${borderColorStyle} ${shadowStyle} ${hasOnClick}`}\n          src={image.src}\n          alt={image.alt || `Avatar of ${firstName} ${lastName}`}\n          aria-hidden=\"true\"\n        />\n      )}\n\n      {!image && (\n        <div\n          className={`${styles.core} ${styles['no-image']} ${avatarSizes[size]} ${roundedStyle} ${borderWidthStyle} ${borderColorStyle} ${borderColorStyle} ${shadowStyle} ${hasOnClick}`}\n        >\n          {initials}\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["styles","avatarSizes","Avatar","size","rounded","borderWidth","borderColor","hasShadow","user","onClick","firstName","lastName","image","initials","shadowStyle","roundedStyle","rdsRounded","borderWidthStyle","rdsBorderWidth","borderColorStyle","rdsBorderColor","hasOnClick","jsxs","Fragment","jsx"],"mappings":"4HAAA,MAAMA,EAAS,CACb,KAAM,mIACN,WAAY,iEACZ,OAAQ,WACV,ECyBAC,EAAA,CAAoB,GAAA,kBACd,GAAA,sBACA,GAAA,oBACA,GAAA,qBACA,GAAA,qBACA,MAAA,qBACG,MAAA,oBAET,EAEOC,EAAA,CAAA,CAAA,KAAAC,EAAA,KAAA,QAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,UAAAC,EAAA,KAAAC,EAAA,QAAAC,KAAA,CACL,KAAA,CAAA,UAAAC,EAAA,SAAAC,EAAA,MAAAC,CAAA,EAAAJ,EACAK,EAAA,GAAAH,EAAA,MAAA,EAAA,EAAA,CAAA,IAAAC,EAAA,MAAA,EAAA,EAAA,CAAA,IACAG,EAAAP,EAAAP,EAAA,OAAA,GACAe,EAAAX,EAAAY,EAAAZ,CAAA,EAAA,GACAa,EAAAZ,EAAAa,EAAAb,CAAA,EAAA,GACAc,EAAAb,EAAAc,EAAAd,CAAA,EAAA,GACAe,EAAAZ,EAAA,iBAAA,GAEA,OAAAa,EAAAC,EAAA,CAAA,SAAA,CAEKX,GAAAY,EACC,MAAC,CAAA,UAAA,GAAAxB,EAAA,QAAAC,EAAAE,CAAA,KAAAY,KAAAE,KAAAE,KAAAA,KAAAL,KAAAO,IAC8I,IAAAT,EAAA,IAClI,IAAAA,EAAA,KAAA,aAAAF,KAAAC,IACiC,cAAA,MAChC,CAAA,EACd,CAAAC,GAAAY,EAIA,MAAC,CAAA,UAAA,GAAAxB,EAAA,QAAAA,EAAA,UAAA,KAAAC,EAAAE,CAAA,KAAAY,KAAAE,KAAAE,KAAAA,KAAAL,KAAAO,IACoK,SAAAR,CAElK,CAAA,CACH,CAAA,CAAA,CAIR"}