{"version":3,"file":"JobItem.stories-a9f11693.js","sources":["../../src/components/Listings/JobItem/JobItem.tsx","../../src/components/Listings/JobItem/JobItemData.tsx","../../src/stories/JobItem.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { CalendarIcon, ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface JobItemProps {\n  children?: React.ReactNode\n  fontSize?: 'base' | 'lg' | 'xl'\n  title?: string\n  link?: string\n  department?: string\n  dateData?: string\n  date?: string\n}\n\nexport interface ItemBaseProps {\n  as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n  as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n  as?: TitleTypeProps\n}\n\nconst JobItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & JobItemProps) => {\n  return (\n    <Component>\n      <Link\n        href={link}\n        className=\"not-prose group relative flex h-full cursor-pointer items-center gap-2 p-6 hover:bg-gray-50 focus:outline-none\"\n      >\n        <div className=\"flex items-center gap-4\">{children}</div>\n        <ChevronRightIcon className=\"ml-auto h-5 w-5 flex-none text-cu-black-300\" aria-hidden=\"true\" />\n      </Link>\n    </Component>\n  )\n}\n\nconst Content = ({ children }: JobItemProps) => {\n  return <div className=\"flex flex-auto flex-col gap-2\">{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & JobItemProps) => {\n  return React.createElement(\n    as,\n    {\n      className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n    },\n    title,\n  )\n}\n\nconst Details = ({ dateData, date }: JobItemProps) => {\n  return (\n    <p className=\"flex text-xs text-cu-black-900\">\n      <CalendarIcon className=\"mr-1 h-4 w-4 text-cu-red\" aria-hidden=\"true\" />\n      <time dateTime={dateData}>Closes {date}</time>\n    </p>\n  )\n}\n\n// Set default for base component as props\nJobItemBase.defaultProps = {\n  as: 'li',\n}\n\nJobItemBase.displayName = 'JobItem'\nContent.displayName = 'JobItem.Content'\nTitle.displayName = 'JobItem.Title'\nDetails.displayName = 'JobItem.Details'\n\nexport const JobItem = Object.assign(JobItemBase, {\n  Content,\n  Title,\n  Details,\n})\n","export const JobItemData = [\n  {\n    id: 1,\n    title: 'Back End Developer',\n    link: '#',\n    department: 'Engineering',\n    date: 'January 7, 2020',\n    dateData: '2020-01-07',\n  },\n  {\n    id: 2,\n    title: 'Front End Developer',\n    link: '#',\n    department: 'Engineering',\n    date: 'January 7, 2020',\n    dateData: '2020-01-07',\n  },\n  {\n    id: 3,\n    title: 'User Interface Designer',\n    link: '#',\n    department: 'Design',\n    date: 'January 14, 2020',\n    dateData: '2020-01-14',\n  },\n  {\n    id: 4,\n    title: 'Back End Developer',\n    link: '#',\n    department: 'Engineering',\n    date: 'January 7, 2020',\n    dateData: '2020-01-07',\n  },\n  {\n    id: 5,\n    title: 'Front End Developer',\n    link: '#',\n    department: 'Engineering',\n    date: 'January 7, 2020',\n    dateData: '2020-01-07',\n  },\n]\n","/* eslint-disable react/jsx-key */\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Column } from '../layouts/Column/Column';\nimport { JobItem } from '../components/Listings/JobItem/JobItem';\nimport { JobItemData as data } from '../components/Listings/JobItem/JobItemData';\nimport { StackedList } from '../layouts/StackedList/StackedList';\nimport { Container } from '../layouts/Container/Container';\nexport default ({\n  title: 'Cards & Lists/Lists/Job Item',\n  component: JobItem,\n  argTypes: {},\n  tags: ['autodocs'],\n  parameters: {\n    controls: {\n      sort: 'requiredFirst'\n    }\n  }\n} as Meta<typeof JobItem>);\ntype Story = StoryObj<typeof JobItem>;\nexport const Default: Story = {\n  render: args => <JobItem as=\"div\" link={args.link}>\n      <JobItem.Content>\n        <JobItem.Title as=\"h2\" fontSize={args.fontSize} title={args.title} />\n        <JobItem.Details dateData={args.dateData} date={args.date} />\n      </JobItem.Content>\n    </JobItem>\n};\nDefault.args = {\n  fontSize: 'base',\n  title: 'Job item title',\n  link: 'https://carleton.ca',\n  date: 'September 24th, 2020',\n  dateData: '2020-01-07'\n};\nexport const SingleItemList: Story = {\n  render: args => <Column maxWidth=\"5xl\">\n      <StackedList hasBorder>\n        <JobItem as=\"div\" link={args.link}>\n          <JobItem.Content>\n            <JobItem.Title as=\"h3\" fontSize={args.fontSize} title={args.title} />\n            <JobItem.Details dateData={args.dateData} date={args.date} />\n          </JobItem.Content>\n        </JobItem>\n      </StackedList>\n    </Column>\n};\nSingleItemList.args = {\n  ...Default.args\n};\nexport const MultiItemList: Story = {\n  render: () => <Container bgColor=\"grey\">\n      <Column maxWidth=\"5xl\">\n        <StackedList header=\"Job listings\" hasBorder hasShadow>\n          {data.map(({\n          id,\n          title,\n          link,\n          dateData,\n          date\n        }) => <JobItem key={id}>\n              <JobItem.Content>\n                <JobItem.Title title={title} link={link} />\n                <JobItem.Details dateData={dateData} date={date} />\n              </JobItem.Content>\n            </JobItem>)}\n        </StackedList>\n      </Column>\n    </Container>\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <JobItem as=\\\"div\\\" link={args.link}>\\n      <JobItem.Content>\\n        <JobItem.Title as=\\\"h2\\\" fontSize={args.fontSize} title={args.title} />\\n        <JobItem.Details dateData={args.dateData} date={args.date} />\\n      </JobItem.Content>\\n    </JobItem>\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSingleItemList.parameters = {\n  ...SingleItemList.parameters,\n  docs: {\n    ...SingleItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <Column maxWidth=\\\"5xl\\\">\\n      <StackedList hasBorder>\\n        <JobItem as=\\\"div\\\" link={args.link}>\\n          <JobItem.Content>\\n            <JobItem.Title as=\\\"h3\\\" fontSize={args.fontSize} title={args.title} />\\n            <JobItem.Details dateData={args.dateData} date={args.date} />\\n          </JobItem.Content>\\n        </JobItem>\\n      </StackedList>\\n    </Column>\\n}\",\n      ...SingleItemList.parameters?.docs?.source\n    }\n  }\n};\nMultiItemList.parameters = {\n  ...MultiItemList.parameters,\n  docs: {\n    ...MultiItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <Container bgColor=\\\"grey\\\">\\n      <Column maxWidth=\\\"5xl\\\">\\n        <StackedList header=\\\"Job listings\\\" hasBorder hasShadow>\\n          {data.map(({\\n          id,\\n          title,\\n          link,\\n          dateData,\\n          date\\n        }) => <JobItem key={id}>\\n              <JobItem.Content>\\n                <JobItem.Title title={title} link={link} />\\n                <JobItem.Details dateData={dateData} date={date} />\\n              </JobItem.Content>\\n            </JobItem>)}\\n        </StackedList>\\n      </Column>\\n    </Container>\\n}\",\n      ...MultiItemList.parameters?.docs?.source\n    }\n  }\n};"],"names":["JobItemBase","Component","children","link","jsx","jsxs","Link","ChevronRightIcon","Content","Title","as","fontSize","title","React","rdsFontSizes","Details","dateData","date","CalendarIcon","JobItem","JobItemData","JobItem_stories","Default","args","SingleItemList","Column","StackedList","MultiItemList","Container","data","id","_a","_c","_b"],"mappings":"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"}