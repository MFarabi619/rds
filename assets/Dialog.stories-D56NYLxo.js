import{j as t}from"./jsx-runtime-Nms4Y4qS.js";import{r}from"./index-BwDkhjyp.js";import{B as m}from"./Button-D5JFhw15.js";import{B as j}from"./ButtonGroup-CP3XHqUd.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Icon-DDs_3nyd.js";import"./optionClasses-BoR2qQUj.js";const p=({children:l,title:o,description:u,isOpen:c,setIsOpen:g})=>{const n=r.useRef(null);r.useEffect(()=>{var e,s,d,f;(e=n.current)!=null&&e.open&&!c?(s=n.current)==null||s.close():!((d=n.current)!=null&&d.open)&&c&&((f=n.current)==null||f.showModal())},[c]),r.useEffect(()=>(c?document.body.classList.add("cu-no-body-scroll"):document.body.classList.remove("cu-no-body-scroll"),()=>{document.body.classList.remove("cu-no-body-scroll")}),[c]),r.useEffect(()=>{const e=n.current,s=d=>{d.preventDefault()};return e==null||e.addEventListener("cancel",s),e==null||e.addEventListener("close",s),()=>{e==null||e.removeEventListener("cancel",s),e==null||e.removeEventListener("close",s)}},[]);const b=e=>{e.target===n.current&&g(!0)};return t.jsxs("dialog",{ref:n,className:"cu-dialog z-10 not-prose w-11/12 md:w-full md:min-w-96 md:max-w-md shadow-md rounded-md p-3.5",onClick:b,"aria-labelledby":o,"aria-describedby":u,children:[t.jsxs("div",{className:"p-3",children:[t.jsx("h3",{className:"text-lg font-medium leading-6 text-gray-900 mb-3",children:o}),u&&t.jsx("p",{className:"text-sm text-gray-500 mb-3",children:u})]}),t.jsxs(j,{align:"right",gap:3,children:[l,t.jsx(m,{onClick:()=>{g(!1)},title:"Close",isSmall:!0,color:"grey"})]})]})};p.__docgenInfo={description:"",methods:[],displayName:"Dialog",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},title:{required:!0,tsType:{name:"string"},description:""},description:{required:!1,tsType:{name:"string"},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},setIsOpen:{required:!0,tsType:{name:"signature",type:"function",raw:"(k: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"k"}],return:{name:"void"}}},description:""}}};const w={title:"Components/Dialog",component:p,tags:["autodocs"],parameters:{controls:{sort:"requiredFirst"}}},i=()=>{const[l,o]=r.useState(!1);return t.jsxs(t.Fragment,{children:[t.jsx(m,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>o(!0)}),t.jsx(p,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:l,setIsOpen:o})]})};i.storyName="Default Dialog";const a=()=>{const[l,o]=r.useState(!1);return t.jsxs(t.Fragment,{children:[t.jsx(m,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>o(!0)}),t.jsx(p,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:l,setIsOpen:o,children:t.jsx(m,{title:"Confirm",isSmall:!0})})]})};i.storyName="Default Dialog";a.storyName="With Confirm Button";i.__docgenInfo={description:"",methods:[],displayName:"Default"};a.__docgenInfo={description:"",methods:[],displayName:"ConfirmButton"};var D,x,y;i.parameters={...i.parameters,docs:{...(D=i.parameters)==null?void 0:D.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />
      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen} />
    </>;
}`,...(y=(x=i.parameters)==null?void 0:x.docs)==null?void 0:y.source}}};var O,h,C;a.parameters={...a.parameters,docs:{...(O=a.parameters)==null?void 0:O.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />
      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen}>
        <Button title="Confirm" isSmall />
      </Dialog>
    </>;
}`,...(C=(h=a.parameters)==null?void 0:h.docs)==null?void 0:C.source}}};const _=["Default","ConfirmButton"];export{a as ConfirmButton,i as Default,_ as __namedExportsOrder,w as default};
