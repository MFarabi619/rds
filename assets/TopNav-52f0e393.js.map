{"version":3,"file":"TopNav-52f0e393.js","sources":["../../src/components/TopNav/TopNav.tsx"],"sourcesContent":["import { Disclosure } from '@headlessui/react'\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/solid'\nimport { Avatar, UserInfoType } from '../Avatar/Avatar'\nimport { DropDown, DropDownItemProps } from '../DropDown/DropDown'\nimport { Link } from '../Link/Link'\nimport { Search } from '../Search/Search'\nimport { TopNavLoader } from '../Loaders/TopNavLoader/TopNavLoader'\nimport { useCallback, useState } from 'react'\n\nexport interface LinkProps {\n  title: string\n  link: string\n  active: boolean\n}\n\nexport interface mobileLoginProps {\n  title: string\n  link?: string\n  onClick?: (event: React.MouseEvent<MouseEvent | HTMLAnchorElement>) => void\n}\n\nexport interface TopNavProps {\n  title: string\n  logoUrl?: string\n  brand?: string\n  login?: React.ReactNode\n  hasSearch?: boolean\n  sourceData?: {\n    [k: string]: string | number\n  }[]\n  children?: React.ReactNode\n  sticky?: boolean\n  navLinks?: LinkProps[]\n  mobileLinks?: LinkProps[]\n  userMenuItems?: {\n    title: string\n    [k: string]: string | number | undefined | (() => void)\n  }[]\n  userInfo?: UserInfoType\n  session?: unknown\n  searchOn?: string\n  mobileLogin?: mobileLoginProps\n}\n\nexport const TopNav = ({\n  children,\n  logoUrl,\n  title,\n  brand,\n  hasSearch,\n  sourceData,\n  searchOn,\n  navLinks,\n  mobileLinks,\n  userMenuItems,\n  userInfo,\n  session,\n  sticky,\n  login,\n  mobileLogin,\n}: TopNavProps) => {\n  const brandLogo = brand ? (\n    <div className=\"flex flex-shrink-0 items-center\">\n      <h1 className=\"sr-only\"> {title} </h1>\n      <img className=\"h-16 w-auto\" src={brand} alt={title} />\n    </div>\n  ) : (\n    <div className=\"flex flex-shrink-0 items-center\">\n      <img\n        className=\"h-10 w-auto\"\n        src=\"https://cu-production.s3.amazonaws.com/rds/assets/cu-shield.svg\"\n        alt=\"Carleton Shield\"\n      />\n      <h1 className=\"flex flex-shrink-0 items-center pl-3 pr-2 text-2xl font-semibold\">{title}</h1>\n    </div>\n  )\n\n  const [open, setOpen] = useState(false)\n\n  const callback = useCallback(\n    (itemOpen: any) => {\n      setOpen(itemOpen)\n    },\n    [setOpen],\n  )\n\n  return (\n    <Disclosure\n      as=\"nav\"\n      className={` ${\n        sticky ? 'sticky' : ''\n      } not-prose  relative top-0 z-50 border-t-2 border-cu-red bg-white px-6 shadow-md lg:px-8`}\n      id=\"topNav\"\n    >\n      {({ open }) => (\n        <>\n          <div className=\"mx-auto flex h-20 max-w-7xl gap-6\">\n            {/* Logo  */}\n            <div className=\"flex flex-shrink-0 items-center hover:text-cu-red\">\n              <Link href={logoUrl ? logoUrl : '/'}>{brandLogo}</Link>\n            </div>\n\n            {/* mobile Menu open Button  */}\n            <div className=\"flex items-center lg:hidden\">\n              <div className=\"absolute right-4 ml-4\">\n                {hasSearch && sourceData && (\n                  <div className=\"inline-flex items-center p-2 \">\n                    <Search sourceData={sourceData} searchOn={searchOn} callback={callback} />\n                  </div>\n                )}\n\n                <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-cu-red-500\">\n                  <span className=\"sr-only\">main menu</span>\n                  {open ? (\n                    <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n            </div>\n\n            {/* navigation Links  */}\n            <ul className=\"hidden lg:flex lg:flex-1 lg:gap-6\">\n              {navLinks &&\n                navLinks.map((item, index) => (\n                  <li\n                    key={index}\n                    className={`inline-flex items-center border-b-2  px-1 pt-1 text-sm font-medium text-cu-black-800 hover:border-cu-red hover:text-cu-red ${\n                      item.active ? 'border-cu-red text-cu-red' : 'border-transparent'\n                    }`}\n                  >\n                    <Link href={item.link}>{item.title}</Link>\n                  </li>\n                ))}\n            </ul>\n\n            {/* Login , search and Other Childrens  */}\n\n            <div className=\"hidden lg:flex lg:items-center lg:gap-6\">\n              {/* search */}\n              {/* this will just search on title in database , we need to extend it to add other props search on to top nav  */}\n              {hasSearch && sourceData && (\n                <div className=\"inline-flex items-center \">\n                  <Search sourceData={sourceData} searchOn={searchOn} callback={callback} />\n                </div>\n              )}\n              {children}\n\n              <>\n                {/* Login */}\n                {session === null && login}\n                {!userInfo && session !== null && <TopNavLoader />}\n              </>\n              {/* update the loading to a spinner  */}\n              {userInfo && !userMenuItems && <Avatar user={userInfo} size=\"xs\" rounded=\"full\" />}\n              {userInfo && userMenuItems && (\n                <DropDown listItems={userMenuItems} menuAlign=\"right\">\n                  <Avatar user={userInfo} size=\"xs\" rounded=\"full\" />\n                </DropDown>\n              )}\n            </div>\n          </div>\n          {/* Mobile Menu  */}\n          {/* active state on mobile */}\n\n          <Disclosure.Panel className=\"-mx-2 sm:-mx-4 lg:-mx-8 lg:hidden\">\n            {({ close }) => (\n              <>\n                <div className=\"space-y-1 pb-3 pt-2\">\n                  {mobileLinks &&\n                    mobileLinks.map((item, index) => (\n                      <Disclosure.Button\n                        as=\"div\"\n                        key={index}\n                        className={`block border-l-4  py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red ${\n                          item.active\n                            ? 'border-l-4 border-cu-red bg-gradient-to-r from-cu-red-50 to-white'\n                            : 'border-transparent'\n                        }`}\n                      >\n                        <Link\n                          href={item.link}\n                          onClick={(e) => {\n                            e.preventDefault()\n                            close()\n                          }}\n                        >\n                          {item.title}\n                        </Link>\n                      </Disclosure.Button>\n                    ))}\n\n                  {/* login button */}\n                  {!userInfo && mobileLogin && (\n                    <>\n                      {/* mobileLogin */}\n                      <Disclosure.Button\n                        as=\"div\"\n                        className={`block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red `}\n                      >\n                        <Link\n                          href={mobileLogin.link ? mobileLogin.link : ''}\n                          onClick={(e) => {\n                            mobileLogin.onClick && e.preventDefault()\n                            mobileLogin.onClick && mobileLogin.onClick(e)\n                            close()\n                          }}\n                        >\n                          {mobileLogin.title}\n                        </Link>\n                      </Disclosure.Button>\n                    </>\n                  )}\n                </div>\n\n                {/* userInfo */}\n                {userInfo && (\n                  <div className=\"border-t border-gray-200 pb-3 pt-4\">\n                    <div className=\"flex items-center px-4\">\n                      <div className=\"flex-shrink-0\">\n                        <Avatar user={userInfo} size=\"xs\" rounded=\"full\" />\n                      </div>\n                      <div className=\"ml-3\">\n                        <div className=\"text-base font-medium text-gray-800\">\n                          {userInfo.firstName + ' ' + userInfo.lastName}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"mt-3 space-y-1\">\n                      {userMenuItems &&\n                        userMenuItems.map((item: DropDownItemProps, index: number) => (\n                          <Disclosure.Button\n                            key={index}\n                            as=\"div\"\n                            className={`block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red `}\n                          >\n                            <Link\n                              href={item.href ? item.href : ''}\n                              onClick={(e) => {\n                                item.onClick && e.preventDefault()\n                                item.onClick && item.onClick(e)\n                                close()\n                              }}\n                            >\n                              {item.title}\n                            </Link>\n                          </Disclosure.Button>\n                        ))}\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}\n"],"names":["TopNav","children","logoUrl","title","brand","hasSearch","sourceData","searchOn","navLinks","mobileLinks","userMenuItems","userInfo","session","sticky","login","mobileLogin","brandLogo","jsxs","jsx","open","setOpen","useState","callback","useCallback","itemOpen","Disclosure","open2","Fragment","Link","Search","XMarkIcon","Bars3Icon","item","index","TopNavLoader","Avatar","DropDown","close","e"],"mappings":"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"}