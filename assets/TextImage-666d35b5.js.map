{"version":3,"file":"TextImage-666d35b5.js","sources":["../../src/components/TextImage/TextImage.Styles.tsx","../../src/components/TextImage/TextImageContent.tsx","../../src/components/TextImage/TextImage.tsx"],"sourcesContent":["export const styles = {\n  base: `flex flex-col lg:flex-row flex-wrap gap-6 mx-auto mb-6 cu-textimage lg:gap-10 not-contained md:mb-12`,\n  border: `border-b border-cu-black-50 pb-6 shadow-hero-text-image md:pb-8`,\n  headerOne: `font-semibold text-3xl md:text-4xl lg:text-5xl lg:leading-[3.5rem] text-cu-black-700 not-prose`,\n  headerTwo: `font-semibold text-2xl md:text-3xl lg:text-4xl lg:leading-[3rem] text-cu-black-700 not-prose`,\n  underline: `relative mb-6 after:absolute after:w-10 after:h-px after:bottom-0 after:bg-cu-red after:left-px pb-6`,\n  contentWrapper: `flex-[0_0_100%] md:max-w-4xl md:flex-1 cu-textimage-content`,\n}\n\nexport const mediaStyles = {\n  mediaWrapper: `relative flex-1 overflow-hidden rounded`,\n  mediaBgImage: `relative flex-1 w-full h-full bg-no-repeat bg-cover min-h-[360px] lg:min-h-[220px]`,\n  svgLeft: `hidden lg:block absolute -left-px top-0 z-10 h-full`,\n  svgRight: `hidden lg:block absolute -right-px top-0 z-10 h-full transform scale-[-1]`,\n}\n","import React from 'react'\nimport { styles, mediaStyles } from './TextImage.Styles'\nimport { proseGroups } from '../../utils/globalClasses'\n\nexport interface TextImageContentProps {\n  children?: React.ReactNode\n  title?: string\n  headerType?: 'h1' | 'h2'\n  isCenter?: boolean\n}\n\nexport interface TextImageMediaProps {\n  imageUrl?: string\n  contentWidth?: number\n  imageZoom?: number\n  angle?: 'left' | 'dual' | 'none'\n  focalPointX?: string\n  focalPointY?: string\n  hasMobileImage?: boolean\n}\n\nexport const TextImageContent = ({\n  children,\n  title,\n  headerType = 'h2',\n  isCenter,\n  imageUrl,\n  contentWidth = 50,\n  imageZoom = 0,\n  angle,\n  focalPointX = '50',\n  focalPointY = '50',\n  hasMobileImage,\n}: TextImageContentProps & TextImageMediaProps) => {\n  // Spacing and alignment\n  const contentPadding = imageUrl ? 'md:py-4' : ''\n  const verticallyCenter = isCenter ? 'justify-center' : ''\n\n  // Image options\n  let hasImage\n  let noImageOnMobile\n  let inlineContentStyles\n  let inlineImageStyles\n\n  if (imageUrl) {\n    hasImage = mediaStyles.mediaBgImage || ''\n    noImageOnMobile = hasMobileImage ? '' : 'hidden lg:block'\n\n    if (hasImage) {\n      inlineContentStyles = {\n        flex: `0 0 ${contentWidth}%`,\n      }\n\n      inlineImageStyles = {\n        backgroundImage: `url(${imageUrl})`,\n        backgroundPosition: `${focalPointX}% ${focalPointY}%`,\n        transform: `scale(1.${imageZoom})`,\n      }\n    }\n  }\n\n  // Image angle\n  let leftSvg = null\n  let rightSvg = null\n\n  switch (angle) {\n    case 'left':\n      leftSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgLeft} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      break\n    case 'dual':\n      leftSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgLeft} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      rightSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgRight} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      break\n    default:\n      break\n  }\n\n  return (\n    <>\n      <div\n        className={`${styles.contentWrapper} ${contentPadding} ${verticallyCenter} ${\n          headerType === 'h1'\n            ? `cu-textimage-as-h1 ${proseGroups.largeLight}`\n            : `cu-textimage-as-h2 ${proseGroups.text}`\n        }`}\n        style={inlineContentStyles}\n      >\n        {title && headerType === 'h1' && <h1 className={`${styles.headerOne} ${styles.underline}`}>{title}</h1>}\n        {title && headerType === 'h2' && <h2 className={`${styles.headerTwo} ${styles.underline}`}>{title}</h2>}\n        {children}\n      </div>\n\n      {imageUrl && (\n        <div className={`${mediaStyles.mediaWrapper} ${noImageOnMobile}`}>\n          <div className={`${mediaStyles.mediaBgImage}`} style={inlineImageStyles}></div>\n          {leftSvg}\n          {rightSvg}\n        </div>\n      )}\n    </>\n  )\n}\n\nTextImageContent.displayName = 'TextImage.Content'\n","import React from 'react'\nimport { TextImageContent } from './TextImageContent'\nimport { rdsMaxWidth } from '../../utils/optionClasses'\nimport { styles } from './TextImage.Styles'\n\nexport interface TextImageProps {\n  children?: React.ReactNode\n  maxWidth?: '5xl' | '7xl' | 'max'\n  hasBorder?: boolean\n  reverse?: boolean\n}\n\nexport const TextImageWrapper = ({ children, maxWidth = '5xl', hasBorder, reverse }: TextImageProps) => {\n  const reverseLayout = reverse ? 'lg:flex-row-reverse' : ''\n  const borderStyle = hasBorder ? styles.border : ''\n\n  return <div className={`${styles.base} ${rdsMaxWidth[maxWidth]} ${reverseLayout} ${borderStyle}`}>{children}</div>\n}\n\nexport const TextImage = Object.assign(TextImageWrapper, {\n  Content: TextImageContent,\n})\n"],"names":["styles","mediaStyles","TextImageContent","children","title","headerType","isCenter","imageUrl","contentWidth","imageZoom","angle","focalPointX","focalPointY","hasMobileImage","contentPadding","verticallyCenter","hasImage","noImageOnMobile","inlineContentStyles","inlineImageStyles","leftSvg","rightSvg","jsx","jsxs","Fragment","proseGroups","TextImageWrapper","maxWidth","hasBorder","reverse","reverseLayout","borderStyle","rdsMaxWidth","TextImage"],"mappings":"8IAAO,MAAMA,EAAS,CACpB,KAAM,uGACN,OAAQ,kEACR,UAAW,iGACX,UAAW,+FACX,UAAW,uGACX,eAAgB,6DAClB,EAEaC,EAAc,CACzB,aAAc,0CACd,aAAc,qFACd,QAAS,sDACT,SAAU,2EACZ,ECOOC,EAAA,CAAA,CAA0B,SAAAC,EAC/B,MAAAC,EACA,WAAAC,EAAA,KACa,SAAAC,EACb,SAAAC,EACA,aAAAC,EAAA,GACe,UAAAC,EAAA,EACH,MAAAC,EACZ,YAAAC,EAAA,KACc,YAAAC,EAAA,KACA,eAAAC,CAEhB,IAAA,CAEE,MAAAC,EAAAP,EAAA,UAAA,GACAQ,EAAAT,EAAA,iBAAA,GAGA,IAAAU,EACAC,EACAC,EACAC,EAEAZ,IACES,EAAAf,EAAA,aACAgB,EAAAJ,EAAA,GAAA,kBAEAG,IACEE,EAAA,CAAsB,KAAA,OAAAV,CAAA,GACK,EAG3BW,EAAA,CAAoB,gBAAA,OAAAZ,CAAA,IACc,mBAAA,GAAAI,CAAA,KAAAC,CAAA,IACkB,UAAA,WAAAH,CAAA,GACnB,IAMrC,IAAAW,EAAA,KACAC,EAAA,KAEA,OAAAX,EAAA,CAAe,IAAA,OAEXU,EAAAE,EAAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,UAAArB,EAAA,QAAA,KAAA,OAAA,QAAA,cAAA,SAAAqB,EAAA,IAEI,OAAC,CAAA,KAAA,OACM,EAAA,0FACH,CAAA,CAAA,CAAA,EAIR,MAAA,IAAA,OAEAF,EAAAE,EAAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,UAAArB,EAAA,QAAA,KAAA,OAAA,QAAA,cAAA,SAAAqB,EAAA,IAEI,OAAC,CAAA,KAAA,OACM,EAAA,0FACH,CAAA,CAAA,CAAA,EAIRD,EAAAC,EAAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,UAAArB,EAAA,SAAA,KAAA,OAAA,QAAA,cAAA,SAAAqB,EAAA,IAEI,OAAC,CAAA,KAAA,OACM,EAAA,0FACH,CAAA,CAAA,CAAA,EAIR,KAEA,CAGJ,OAAAC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEID,EAAA,KAAA,MAAC,CAAA,UAAA,GAAAvB,EAAA,cAAA,IAAAc,CAAA,IAAAC,CAAA,IAAAV,IAAA,KAAA,sBAAAoB,EAAA,UAAA,GAAA,sBAAAA,EAAA,IAAA,EAAA,GAKC,MAAAP,EACO,SAAA,CAENd,GAAAC,IAAA,MAAAiB,EAAA,IAAA,KAAA,CAAA,UAAA,GAAAtB,EAAA,SAAA,IAAAA,EAAA,SAAA,GAAA,SAAAI,EAAA,EAAiGA,GAAAC,IAAA,MAAAiB,EAAA,IAAA,KAAA,CAAA,UAAA,GAAAtB,EAAA,SAAA,IAAAA,EAAA,SAAA,GAAA,SAAAI,EAAA,EACAD,CACjG,CAAA,CAAA,EACHI,GAAAgB,EAAA,KAAA,MAAA,CAAA,UAAA,GAAAtB,EAAA,YAAA,IAAAgB,CAAA,GAAA,SAAA,CAIIK,MAAA,MAAA,CAAA,UAAA,GAAArB,EAAA,YAAA,GAAA,MAAAkB,EAAA,EAAyEC,EACxEC,CACA,EAAA,CACH,CAAA,CAAA,CAIR,EAEAnB,EAAA,YAAA,2uCChHO,MAAAwB,EAAA,CAAA,CAAA,SAAAvB,EAAA,SAAAwB,EAAA,MAAA,UAAAC,EAAA,QAAAC,KAAA,CACL,MAAAC,EAAAD,EAAA,sBAAA,GACAE,EAAAH,EAAA5B,EAAA,OAAA,GAEA,OAAAsB,EAAAA,IAAA,MAAA,CAAA,UAAA,GAAAtB,EAAA,IAAA,IAAAgC,EAAAL,CAAA,CAAA,IAAAG,CAAA,IAAAC,CAAA,GAAA,SAAA5B,CAAA,CAAA,CACF,EAEO8B,EAAA,OAAA,OAAAP,EAAA,CAAkD,QAAAxB,CAEzD,CAAA"}