{"version":3,"file":"MarketplaceItem.stories-f162fc90.js","sources":["../../src/components/Listings/MarketplaceItem/MarketplaceItem.tsx","../../src/components/Listings/MarketplaceItem/MarketplaceItemData.tsx","../../src/stories/MarketplaceItem.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Badge } from '../../Badge/Badge'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface MarketplaceItemProps {\n  children?: React.ReactNode\n  fontSize?: 'base' | 'lg' | 'xl'\n  title?: string\n  link?: string\n  image?: string\n  alt?: string\n  cost?: string\n  condition?: string\n  category?: string\n}\n\nexport interface ItemBaseProps {\n  as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n  as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n  as?: TitleTypeProps\n}\n\nconst MarketplaceItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & MarketplaceItemProps) => {\n  return (\n    <Component>\n      <Link\n        href={link}\n        className=\"not-prose group relative flex h-full cursor-pointer items-center gap-2 p-6 hover:bg-gray-50 focus:outline-none\"\n      >\n        <div className=\"flex items-center gap-4\">{children}</div>\n        <ChevronRightIcon className=\"ml-auto h-5 w-5 flex-none text-cu-black-300\" aria-hidden=\"true\" />\n      </Link>\n    </Component>\n  )\n}\n\nconst Content = ({ children }: MarketplaceItemProps) => {\n  return <div className=\"flex flex-auto flex-col gap-1\">{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & MarketplaceItemProps) => {\n  return React.createElement(\n    as,\n    {\n      className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n    },\n    title,\n  )\n}\n\nconst Image = ({ image, alt }: MarketplaceItemProps) => {\n  return (\n    <div className=\"w-16 flex-none md:w-24\">\n      <img className=\"h-auto w-auto rounded lg:w-24\" src={image} alt={alt} />\n    </div>\n  )\n}\n\nconst Details = ({ cost, condition }: MarketplaceItemProps) => {\n  return (\n    <ul className=\"flex flex-wrap sm:gap-2\">\n      <li className=\"mr-2 flex items-center text-sm text-cu-black-700\">\n        {condition} condition for {cost}\n      </li>\n    </ul>\n  )\n}\n\nconst Category = ({ category }: MarketplaceItemProps) => {\n  return (\n    <div>\n      <Badge>{category}</Badge>\n    </div>\n  )\n}\n\n// Set default for base component as props\nMarketplaceItemBase.defaultProps = {\n  as: 'li',\n}\n\nMarketplaceItemBase.displayName = 'MarketplaceItem'\nContent.displayName = 'MarketplaceItem.Content'\nTitle.displayName = 'MarketplaceItem.Title'\nImage.displayName = 'MarketplaceItem.Image'\nDetails.displayName = 'MarketplaceItem.Details'\nCategory.displayName = 'MarketplaceItem.Category'\n\nexport const MarketplaceItem = Object.assign(MarketplaceItemBase, {\n  Content,\n  Title,\n  Image,\n  Details,\n  Category,\n})\n","export const MarketplaceItemData = [\n  {\n    id: 1,\n    title: 'Nintendo 64',\n    link: '#',\n    cost: '$100.00',\n    condition: 'Mint',\n    image: 'https://source.unsplash.com/random/400x300',\n    alt: 'Image alt tag',\n    category: 'category',\n  },\n  {\n    id: 2,\n    title: 'Plastic Boxes',\n    link: '#',\n    cost: '$40.00',\n    condition: 'Mint',\n    image: 'https://source.unsplash.com/random/400x300',\n    alt: 'Image alt tag',\n    category: 'category',\n  },\n  {\n    id: 3,\n    title: 'Cambridge Audio Stereo Amplifier',\n    link: '#',\n    cost: '$10000.00',\n    condition: 'Open Box',\n    image: 'https://source.unsplash.com/random/400x300',\n    alt: 'Image alt tag',\n    category: 'category',\n  },\n  {\n    id: 4,\n    title: 'IKEA Baskets',\n    link: '#',\n    cost: '$90.00',\n    condition: 'Like New',\n    image: 'https://source.unsplash.com/random/400x300',\n    alt: 'Image alt tag',\n    category: 'category',\n  },\n  {\n    id: 5,\n    title: 'Hair Collection',\n    link: '#',\n    cost: '$100.00',\n    condition: 'Trash',\n    image: 'https://source.unsplash.com/random/400x300',\n    alt: 'Image alt tag',\n    category: 'category',\n  },\n]\n","/* eslint-disable react/jsx-key */\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Column } from '../layouts/Column/Column';\nimport { MarketplaceItem } from '../components/Listings/MarketplaceItem/MarketplaceItem';\nimport { MarketplaceItemData as data } from '../components/Listings/MarketplaceItem/MarketplaceItemData';\nimport { StackedList } from '../layouts/StackedList/StackedList';\nimport { Container } from '../layouts/Container/Container';\nexport default ({\n  title: 'Cards & Lists/Lists/Marketplace Item',\n  component: MarketplaceItem,\n  argTypes: {},\n  tags: ['autodocs'],\n  parameters: {\n    controls: {\n      sort: 'requiredFirst'\n    }\n  }\n} as Meta<typeof MarketplaceItem>);\ntype Story = StoryObj<typeof MarketplaceItem>;\nexport const Default: Story = {\n  render: args => <MarketplaceItem as=\"div\" link={args.link}>\n      <MarketplaceItem.Image image={args.image} alt={args.alt} />\n      <MarketplaceItem.Content>\n        <MarketplaceItem.Title as=\"h2\" fontSize={args.fontSize} title={args.title} link={args.link} cost={args.cost} />\n        <MarketplaceItem.Details condition={args.condition} cost={args.cost} />\n        <MarketplaceItem.Category category={args.category} />\n      </MarketplaceItem.Content>\n    </MarketplaceItem>\n};\nDefault.args = {\n  fontSize: 'base',\n  title: 'Marketplace item title',\n  link: 'https://carleton.ca',\n  cost: '$100.00',\n  condition: 'Like New',\n  image: 'https://source.unsplash.com/random/400x300',\n  category: 'Category'\n};\nexport const SingleItemList: Story = {\n  render: args => <Column maxWidth=\"5xl\">\n      <StackedList hasBorder>\n        <MarketplaceItem as=\"div\" link={args.link}>\n          <MarketplaceItem.Image image={args.image} alt={args.alt} />\n          <MarketplaceItem.Content>\n            <MarketplaceItem.Title as=\"h2\" fontSize={args.fontSize} title={args.title} link={args.link} cost={args.cost} />\n            <MarketplaceItem.Details condition={args.condition} cost={args.cost} />\n            <MarketplaceItem.Category category={args.category} />\n          </MarketplaceItem.Content>\n        </MarketplaceItem>\n      </StackedList>\n    </Column>\n};\nSingleItemList.args = {\n  ...Default.args\n};\nexport const MultiItemList: Story = {\n  render: () => <Container bgColor=\"grey\">\n      <Column maxWidth=\"5xl\">\n        <StackedList header=\"Marketplace listing\" hasBorder hasShadow>\n          {data.map(({\n          id,\n          title,\n          link,\n          image,\n          alt,\n          condition,\n          cost,\n          category\n        }) => <MarketplaceItem key={id}>\n              <MarketplaceItem.Image image={image} alt={alt} />\n              <MarketplaceItem.Content>\n                <MarketplaceItem.Title title={title} link={link} />\n                <MarketplaceItem.Details condition={condition} cost={cost} />\n                <MarketplaceItem.Category category={category} />\n              </MarketplaceItem.Content>\n            </MarketplaceItem>)}\n        </StackedList>\n      </Column>\n    </Container>\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <MarketplaceItem as=\\\"div\\\" link={args.link}>\\n      <MarketplaceItem.Image image={args.image} alt={args.alt} />\\n      <MarketplaceItem.Content>\\n        <MarketplaceItem.Title as=\\\"h2\\\" fontSize={args.fontSize} title={args.title} link={args.link} cost={args.cost} />\\n        <MarketplaceItem.Details condition={args.condition} cost={args.cost} />\\n        <MarketplaceItem.Category category={args.category} />\\n      </MarketplaceItem.Content>\\n    </MarketplaceItem>\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSingleItemList.parameters = {\n  ...SingleItemList.parameters,\n  docs: {\n    ...SingleItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <Column maxWidth=\\\"5xl\\\">\\n      <StackedList hasBorder>\\n        <MarketplaceItem as=\\\"div\\\" link={args.link}>\\n          <MarketplaceItem.Image image={args.image} alt={args.alt} />\\n          <MarketplaceItem.Content>\\n            <MarketplaceItem.Title as=\\\"h2\\\" fontSize={args.fontSize} title={args.title} link={args.link} cost={args.cost} />\\n            <MarketplaceItem.Details condition={args.condition} cost={args.cost} />\\n            <MarketplaceItem.Category category={args.category} />\\n          </MarketplaceItem.Content>\\n        </MarketplaceItem>\\n      </StackedList>\\n    </Column>\\n}\",\n      ...SingleItemList.parameters?.docs?.source\n    }\n  }\n};\nMultiItemList.parameters = {\n  ...MultiItemList.parameters,\n  docs: {\n    ...MultiItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <Container bgColor=\\\"grey\\\">\\n      <Column maxWidth=\\\"5xl\\\">\\n        <StackedList header=\\\"Marketplace listing\\\" hasBorder hasShadow>\\n          {data.map(({\\n          id,\\n          title,\\n          link,\\n          image,\\n          alt,\\n          condition,\\n          cost,\\n          category\\n        }) => <MarketplaceItem key={id}>\\n              <MarketplaceItem.Image image={image} alt={alt} />\\n              <MarketplaceItem.Content>\\n                <MarketplaceItem.Title title={title} link={link} />\\n                <MarketplaceItem.Details condition={condition} cost={cost} />\\n                <MarketplaceItem.Category category={category} />\\n              </MarketplaceItem.Content>\\n            </MarketplaceItem>)}\\n        </StackedList>\\n      </Column>\\n    </Container>\\n}\",\n      ...MultiItemList.parameters?.docs?.source\n    }\n  }\n};"],"names":["MarketplaceItemBase","Component","children","link","jsx","jsxs","Link","ChevronRightIcon","Content","Title","as","fontSize","title","React","rdsFontSizes","Image","image","alt","Details","cost","condition","Category","category","Badge","MarketplaceItem","MarketplaceItemData","MarketplaceItem_stories","Default","args","SingleItemList","Column","StackedList","MultiItemList","Container","data","id","_a","_c","_b"],"mappings":"gbAkCA,MAAAA,EAAA,CAAA,CAAA,GAAAC,EAAA,MAAA,SAAAC,EAAA,KAAAC,KACEC,EAAAH,EAAA,CAAA,SAAAI,EAEIC,EAAC,CAAA,KAAAH,EACO,UAAA,iHACI,SAAA,CAEVC,EAAA,MAAA,CAAA,UAAA,0BAAA,SAAAF,CAAA,CAAA,EAAmDE,EAAAG,EAAA,CAAA,UAAA,8CAAA,cAAA,OAAA,CAC0C,CAAA,CAAA,CAAA,CAAA,EAMrGC,EAAA,CAAA,CAAA,SAAAN,KACEE,EAAA,MAAA,CAAA,UAAA,gCAAA,SAAAF,CAAA,CAAA,EAGFO,EAAA,CAAA,CAAA,GAAAC,EAAA,KAAA,SAAAC,EAAA,OAAA,MAAAC,KACEC,EAAA,cAAaH,EACX,CACA,UAAA,+DAAAI,EAAAH,CAAA,GACiG,EACjGC,CACA,EAIJG,EAAA,CAAA,CAAA,MAAAC,EAAA,IAAAC,KACEb,EAAA,MAAA,CAAA,UAAA,yBAAA,SAAAA,EAAA,MAAA,CAAA,UAAA,gCAAA,IAAAY,EAAA,IAAAC,CAAA,CAAA,CAAA,CAAA,EAOFC,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KACEhB,EAAA,KAAA,CAAA,UAAA,0BAAA,SAAAC,EAAA,KAAA,CAAA,UAAA,mDAAA,SAAA,CAGOe,EAAA,kBAAUD,CAAgB,CAAA,CAAA,CAAA,CAAA,EAMnCE,EAAA,CAAA,CAAA,SAAAC,KACElB,EAAA,MAAA,CAAA,SAAAA,EAAAmB,EAAA,CAAA,SAAAD,EAAA,CAAA,CAAA,EAQFtB,EAAA,aAAA,CAAmC,GAAA,IAEnC,EAEAA,EAAA,YAAA,kBACAQ,EAAA,YAAA,0BACAC,EAAA,YAAA,wBACAM,EAAA,YAAA,wBACAG,EAAA,YAAA,0BACAG,EAAA,YAAA,2BAEO,MAAAG,EAAA,OAAA,OAAAxB,EAAA,CAA2D,QAAAQ,EAChE,MAAAC,EACA,MAAAM,EACA,QAAAG,EACA,SAAAG,CAEF,CAAA,+rIC1GO,MAAMI,EAAsB,CACjC,CACE,GAAI,EACJ,MAAO,cACP,KAAM,IACN,KAAM,UACN,UAAW,OACX,MAAO,6CACP,IAAK,gBACL,SAAU,UACZ,EACA,CACE,GAAI,EACJ,MAAO,gBACP,KAAM,IACN,KAAM,SACN,UAAW,OACX,MAAO,6CACP,IAAK,gBACL,SAAU,UACZ,EACA,CACE,GAAI,EACJ,MAAO,mCACP,KAAM,IACN,KAAM,YACN,UAAW,WACX,MAAO,6CACP,IAAK,gBACL,SAAU,UACZ,EACA,CACE,GAAI,EACJ,MAAO,eACP,KAAM,IACN,KAAM,SACN,UAAW,WACX,MAAO,6CACP,IAAK,gBACL,SAAU,UACZ,EACA,CACE,GAAI,EACJ,MAAO,kBACP,KAAM,IACN,KAAM,UACN,UAAW,QACX,MAAO,6CACP,IAAK,gBACL,SAAU,UACZ,CACF,EC5CgBC,EAAA,CACd,MAAO,uCACP,UAAWF,EACX,SAAU,CAAC,EACX,KAAM,CAAC,UAAU,EACjB,WAAY,CACV,SAAU,CACR,KAAM,eACR,CACF,CACF,EAEaG,EAAiB,CAC5B,UAAiBtB,EAAAmB,EAAA,CAAgB,GAAG,MAAM,KAAMI,EAAK,KACjD,SAAA,CAACxB,EAAAoB,EAAgB,MAAhB,CAAsB,MAAOI,EAAK,MAAO,IAAKA,EAAK,IAAK,EACzDvB,EAACmB,EAAgB,QAAhB,CACC,SAAA,CAAApB,EAACoB,EAAgB,MAAhB,CAAsB,GAAG,KAAK,SAAUI,EAAK,SAAU,MAAOA,EAAK,MAAO,KAAMA,EAAK,KAAM,KAAMA,EAAK,KAAM,EAC7GxB,EAACoB,EAAgB,QAAhB,CAAwB,UAAWI,EAAK,UAAW,KAAMA,EAAK,KAAM,IACpEJ,EAAgB,SAAhB,CAAyB,SAAUI,EAAK,SAAU,CAAA,EACrD,CAAA,EACF,CACJ,EACAD,EAAQ,KAAO,CACb,SAAU,OACV,MAAO,yBACP,KAAM,sBACN,KAAM,UACN,UAAW,WACX,MAAO,6CACP,SAAU,UACZ,EACO,MAAME,EAAwB,CACnC,OAAgBD,GAAAxB,EAAC0B,EAAO,CAAA,SAAS,MAC7B,SAAC1B,EAAA2B,EAAA,CAAY,UAAS,GACpB,WAACP,EAAgB,CAAA,GAAG,MAAM,KAAMI,EAAK,KACnC,SAAA,CAACxB,EAAAoB,EAAgB,MAAhB,CAAsB,MAAOI,EAAK,MAAO,IAAKA,EAAK,IAAK,EACzDvB,EAACmB,EAAgB,QAAhB,CACC,SAAA,CAAApB,EAACoB,EAAgB,MAAhB,CAAsB,GAAG,KAAK,SAAUI,EAAK,SAAU,MAAOA,EAAK,MAAO,KAAMA,EAAK,KAAM,KAAMA,EAAK,KAAM,EAC7GxB,EAACoB,EAAgB,QAAhB,CAAwB,UAAWI,EAAK,UAAW,KAAMA,EAAK,KAAM,IACpEJ,EAAgB,SAAhB,CAAyB,SAAUI,EAAK,SAAU,CAAA,EACrD,CAAA,CACF,CAAA,CACF,CAAA,EACF,CACJ,EACAC,EAAe,KAAO,CACpB,GAAGF,EAAQ,IACb,EACO,MAAMK,EAAuB,CAClC,OAAQ,IAAO5B,EAAA6B,EAAA,CAAU,QAAQ,OAC7B,SAAA7B,EAAC0B,GAAO,SAAS,MACf,WAACC,EAAY,CAAA,OAAO,sBAAsB,UAAS,GAAC,UAAS,GAC1D,SAAAG,EAAK,IAAI,CAAC,CACX,GAAAC,EACA,MAAAvB,EACA,KAAAT,EACA,MAAAa,EACA,IAAAC,EACA,UAAAG,EACA,KAAAD,EACA,SAAAG,CAAA,MACKE,EACD,CAAA,SAAA,CAAApB,EAACoB,EAAgB,MAAhB,CAAsB,MAAAR,EAAc,IAAAC,CAAU,CAAA,EAC/CZ,EAACmB,EAAgB,QAAhB,CACC,SAAA,CAAApB,EAACoB,EAAgB,MAAhB,CAAsB,MAAAZ,EAAc,KAAAT,CAAY,CAAA,EAChDC,EAAAoB,EAAgB,QAAhB,CAAwB,UAAAJ,EAAsB,KAAAD,CAAY,CAAA,EAC1Df,EAAAoB,EAAgB,SAAhB,CAAyB,SAAAF,CAAoB,CAAA,CAAA,EAChD,CAAA,CAAA,EANsBa,CAOxB,CAAkB,EACtB,CAAA,CACF,CACF,CAAA,CACJ,YACAR,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,KAAM,CACJ,IAAGS,EAAAT,EAAQ,aAAR,YAAAS,EAAoB,KACvB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAX,EAAQ,aAAR,YAAAW,EAAoB,OAApB,YAAAD,EAA0B,MAC/B,CACF,CACF,YACAR,EAAe,WAAa,CAC1B,GAAGA,EAAe,WAClB,KAAM,CACJ,IAAGO,EAAAP,EAAe,aAAf,YAAAO,EAA2B,KAC9B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAT,EAAe,aAAf,YAAAS,EAA2B,OAA3B,YAAAD,EAAiC,MACtC,CACF,CACF,YACAL,EAAc,WAAa,CACzB,GAAGA,EAAc,WACjB,KAAM,CACJ,IAAGI,EAAAJ,EAAc,aAAd,YAAAI,EAA0B,KAC7B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAN,EAAc,aAAd,YAAAM,EAA0B,OAA1B,YAAAD,EAAgC,MACrC,CACF,CACF"}