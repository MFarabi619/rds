{"version":3,"file":"FeedItem.stories-6a12f2bb.js","sources":["../../src/components/Listings/FeedItem/FeedItem.tsx","../../src/components/Listings/FeedItem/FeedItemData.tsx","../../src/stories/FeedItem.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Badge } from '../../Badge/Badge'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface FeedItemProps {\n  children?: React.ReactNode\n  fontSize?: 'base' | 'lg' | 'xl'\n  title?: string\n  link?: string\n  date?: string\n  excerpt?: string\n  category?: string\n}\n\nexport interface ItemBaseProps {\n  as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n  as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n  as?: TitleTypeProps\n}\n\nconst FeedItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & FeedItemProps) => {\n  return (\n    <Component>\n      <Link\n        href={link}\n        className=\"not-prose group relative flex h-full cursor-pointer items-center gap-2 p-6 hover:bg-gray-50 focus:outline-none\"\n      >\n        <div className=\"flex items-start gap-4\">{children}</div>\n        <ChevronRightIcon className=\"ml-auto h-5 w-5 flex-none text-cu-black-300\" aria-hidden=\"true\" />\n      </Link>\n    </Component>\n  )\n}\n\nconst Content = ({ children }: FeedItemProps) => {\n  return <div className=\"flex flex-auto flex-col gap-2\">{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & FeedItemProps) => {\n  return React.createElement(\n    as,\n    {\n      className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n    },\n    title,\n  )\n}\n\nconst Date = ({ date }: FeedItemProps) => {\n  return <p className=\"mr-4 text-sm italic text-cu-black-700\">{date}</p>\n}\n\nconst Excerpt = ({ excerpt }: FeedItemProps) => {\n  return <p className=\"text-sm text-cu-black-900\">{excerpt}</p>\n}\n\nconst Category = ({ category }: FeedItemProps) => {\n  return (\n    <div>\n      <Badge>{category}</Badge>\n    </div>\n  )\n}\n\n// Set default for base component as props\nFeedItemBase.defaultProps = {\n  as: 'li',\n}\n\nFeedItemBase.displayName = 'FeedItem'\nContent.displayName = 'FeedItem.Content'\nTitle.displayName = 'FeedItem.Title'\nDate.displayName = 'FeedItem.Date'\nExcerpt.displayName = 'FeedItem.Excerpt'\nCategory.displayName = 'FeedItem.Category'\n\nexport const FeedItem = Object.assign(FeedItemBase, {\n  Content,\n  Title,\n  Date,\n  Excerpt,\n  Category,\n})\n","export const FeedItemData = [\n  {\n    id: 1,\n    title: 'Office closed on July 2nd',\n    link: 'https://carleton.ca',\n    date: 'September 3rd, 2023',\n    category: 'Human Resources',\n    excerpt:\n      'Tenetur libero voluptatem rerum occaecati qui est molestiae exercitationem. Voluptate quisquam iure assumenda consequatur ex et recusandae.',\n  },\n  {\n    id: 2,\n    title: 'New password policy',\n    link: 'https://carleton.ca',\n    date: 'September 9th, 2023',\n    category: 'Healthy Workplace',\n    excerpt:\n      'Tenetur libero voluptatem rerum occaecati qui est molestiae exercitationem. Voluptate quisquam iure assumenda consequatur ex et recusandae.',\n  },\n  {\n    id: 3,\n    title: 'Office closed on July 2nd',\n    link: 'https://carleton.ca',\n    date: 'September 15th, 2023',\n    category: 'Potato',\n    excerpt:\n      'Tenetur libero voluptatem rerum occaecati qui est molestiae exercitationem. Voluptate quisquam iure assumenda consequatur ex et recusandae.',\n  },\n  {\n    id: 2,\n    title: 'New password policy',\n    link: 'https://carleton.ca',\n    date: 'September 9th, 2023',\n    category: 'Healthy Workplace',\n    excerpt:\n      'Tenetur libero voluptatem rerum occaecati qui est molestiae exercitationem. Voluptate quisquam iure assumenda consequatur ex et recusandae.',\n  },\n]\n","/* eslint-disable react/jsx-key */\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Column } from '../layouts/Column/Column';\nimport { FeedItem } from '../components/Listings/FeedItem/FeedItem';\nimport { FeedItemData as data } from '../components/Listings/FeedItem/FeedItemData';\nimport { StackedList } from '../layouts/StackedList/StackedList';\nimport { Container } from '../layouts/Container/Container';\nexport default ({\n  title: 'Cards & Lists/Lists/Feed Item',\n  component: FeedItem,\n  argTypes: {},\n  tags: ['autodocs'],\n  parameters: {\n    controls: {\n      sort: 'requiredFirst'\n    }\n  }\n} as Meta<typeof FeedItem>);\ntype Story = StoryObj<typeof FeedItem>;\nexport const Default: Story = {\n  render: args => <FeedItem as=\"div\" link={args.link}>\n      <FeedItem.Content>\n        <FeedItem.Title as=\"h2\" fontSize={args.fontSize} title={args.title} />\n        <FeedItem.Date date={args.date} />\n        <FeedItem.Excerpt excerpt={args.excerpt} />\n        <FeedItem.Category category={args.category} />\n      </FeedItem.Content>\n    </FeedItem>\n};\nDefault.args = {\n  fontSize: 'base',\n  title: 'Feed item title',\n  link: 'https://carleton.ca',\n  date: 'November 24th, 2022',\n  excerpt: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras dictum, metus id luctus aliquam, mi libero rutrum massa, ac finibus risus velit in odio.',\n  category: 'Human Resources'\n};\nexport const SingleItemList: Story = {\n  render: args => <Column maxWidth=\"5xl\">\n      <StackedList hasBorder>\n        <FeedItem as=\"div\" link={args.link}>\n          <FeedItem.Content>\n            <FeedItem.Title as=\"h3\" fontSize={args.fontSize} title={args.title} />\n            <FeedItem.Date date={args.date} />\n            <FeedItem.Excerpt excerpt={args.excerpt} />\n            <FeedItem.Category category={args.category} />\n          </FeedItem.Content>\n        </FeedItem>\n      </StackedList>\n    </Column>\n};\nSingleItemList.args = {\n  ...Default.args\n};\nexport const MultiItemList: Story = {\n  render: () => <Container bgColor=\"grey\">\n      <Column maxWidth=\"5xl\">\n        <StackedList header=\"News feed listing\" hasBorder hasShadow>\n          {data.map(({\n          id,\n          title,\n          link,\n          date,\n          excerpt,\n          category\n        }) => <FeedItem key={id}>\n              <FeedItem.Content>\n                <FeedItem.Title title={title} link={link} />\n                <FeedItem.Date date={date} />\n                <FeedItem.Excerpt excerpt={excerpt} />\n                <FeedItem.Category category={category} />\n              </FeedItem.Content>\n            </FeedItem>)}\n        </StackedList>\n      </Column>\n    </Container>\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <FeedItem as=\\\"div\\\" link={args.link}>\\n      <FeedItem.Content>\\n        <FeedItem.Title as=\\\"h2\\\" fontSize={args.fontSize} title={args.title} />\\n        <FeedItem.Date date={args.date} />\\n        <FeedItem.Excerpt excerpt={args.excerpt} />\\n        <FeedItem.Category category={args.category} />\\n      </FeedItem.Content>\\n    </FeedItem>\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSingleItemList.parameters = {\n  ...SingleItemList.parameters,\n  docs: {\n    ...SingleItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <Column maxWidth=\\\"5xl\\\">\\n      <StackedList hasBorder>\\n        <FeedItem as=\\\"div\\\" link={args.link}>\\n          <FeedItem.Content>\\n            <FeedItem.Title as=\\\"h3\\\" fontSize={args.fontSize} title={args.title} />\\n            <FeedItem.Date date={args.date} />\\n            <FeedItem.Excerpt excerpt={args.excerpt} />\\n            <FeedItem.Category category={args.category} />\\n          </FeedItem.Content>\\n        </FeedItem>\\n      </StackedList>\\n    </Column>\\n}\",\n      ...SingleItemList.parameters?.docs?.source\n    }\n  }\n};\nMultiItemList.parameters = {\n  ...MultiItemList.parameters,\n  docs: {\n    ...MultiItemList.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <Container bgColor=\\\"grey\\\">\\n      <Column maxWidth=\\\"5xl\\\">\\n        <StackedList header=\\\"News feed listing\\\" hasBorder hasShadow>\\n          {data.map(({\\n          id,\\n          title,\\n          link,\\n          date,\\n          excerpt,\\n          category\\n        }) => <FeedItem key={id}>\\n              <FeedItem.Content>\\n                <FeedItem.Title title={title} link={link} />\\n                <FeedItem.Date date={date} />\\n                <FeedItem.Excerpt excerpt={excerpt} />\\n                <FeedItem.Category category={category} />\\n              </FeedItem.Content>\\n            </FeedItem>)}\\n        </StackedList>\\n      </Column>\\n    </Container>\\n}\",\n      ...MultiItemList.parameters?.docs?.source\n    }\n  }\n};"],"names":["FeedItemBase","Component","children","link","jsx","jsxs","Link","ChevronRightIcon","Content","Title","as","fontSize","title","React","rdsFontSizes","Date","date","Excerpt","excerpt","Category","category","Badge","FeedItem","FeedItemData","FeedItem_stories","Default","args","SingleItemList","Column","StackedList","MultiItemList","Container","data","id","_a","_c","_b"],"mappings":"gbAgCA,MAAAA,EAAA,CAAA,CAAA,GAAAC,EAAA,MAAA,SAAAC,EAAA,KAAAC,KACEC,EAAAH,EAAA,CAAA,SAAAI,EAEIC,EAAC,CAAA,KAAAH,EACO,UAAA,iHACI,SAAA,CAEVC,EAAA,MAAA,CAAA,UAAA,yBAAA,SAAAF,CAAA,CAAA,EAAkDE,EAAAG,EAAA,CAAA,UAAA,8CAAA,cAAA,OAAA,CAC2C,CAAA,CAAA,CAAA,CAAA,EAMrGC,EAAA,CAAA,CAAA,SAAAN,KACEE,EAAA,MAAA,CAAA,UAAA,gCAAA,SAAAF,CAAA,CAAA,EAGFO,EAAA,CAAA,CAAA,GAAAC,EAAA,KAAA,SAAAC,EAAA,OAAA,MAAAC,KACEC,EAAA,cAAaH,EACX,CACA,UAAA,+DAAAI,EAAAH,CAAA,GACiG,EACjGC,CACA,EAIJG,EAAA,CAAA,CAAA,KAAAC,KACEZ,EAAA,IAAA,CAAA,UAAA,wCAAA,SAAAY,CAAA,CAAA,EAGFC,EAAA,CAAA,CAAA,QAAAC,KACEd,EAAA,IAAA,CAAA,UAAA,4BAAA,SAAAc,CAAA,CAAA,EAGFC,EAAA,CAAA,CAAA,SAAAC,KACEhB,EAAA,MAAA,CAAA,SAAAA,EAAAiB,EAAA,CAAA,SAAAD,EAAA,CAAA,CAAA,EAQFpB,EAAA,aAAA,CAA4B,GAAA,IAE5B,EAEAA,EAAA,YAAA,WACAQ,EAAA,YAAA,mBACAC,EAAA,YAAA,iBACAM,EAAA,YAAA,gBACAE,EAAA,YAAA,mBACAE,EAAA,YAAA,oBAEO,MAAAG,EAAA,OAAA,OAAAtB,EAAA,CAA6C,QAAAQ,EAClD,MAAAC,EACA,KAAAM,EACA,QAAAE,EACA,SAAAE,CAEF,CAAA,mgIC9FO,MAAMI,EAAe,CAC1B,CACE,GAAI,EACJ,MAAO,4BACP,KAAM,sBACN,KAAM,sBACN,SAAU,kBACV,QACE,6IACJ,EACA,CACE,GAAI,EACJ,MAAO,sBACP,KAAM,sBACN,KAAM,sBACN,SAAU,oBACV,QACE,6IACJ,EACA,CACE,GAAI,EACJ,MAAO,4BACP,KAAM,sBACN,KAAM,uBACN,SAAU,SACV,QACE,6IACJ,EACA,CACE,GAAI,EACJ,MAAO,sBACP,KAAM,sBACN,KAAM,sBACN,SAAU,oBACV,QACE,6IACJ,CACF,EC9BgBC,EAAA,CACd,MAAO,gCACP,UAAWF,EACX,SAAU,CAAC,EACX,KAAM,CAAC,UAAU,EACjB,WAAY,CACV,SAAU,CACR,KAAM,eACR,CACF,CACF,EAEaG,EAAiB,CAC5B,OAAQC,GAAStB,EAAAkB,EAAA,CAAS,GAAG,MAAM,KAAMI,EAAK,KAC1C,SAAArB,EAACiB,EAAS,QAAT,CACC,SAAA,CAAClB,EAAAkB,EAAS,MAAT,CAAe,GAAG,KAAK,SAAUI,EAAK,SAAU,MAAOA,EAAK,KAAO,CAAA,IACnEJ,EAAS,KAAT,CAAc,KAAMI,EAAK,KAAM,IAC/BJ,EAAS,QAAT,CAAiB,QAASI,EAAK,QAAS,IACxCJ,EAAS,SAAT,CAAkB,SAAUI,EAAK,SAAU,CAAA,CAAA,CAC9C,CACF,CAAA,CACJ,EACAD,EAAQ,KAAO,CACb,SAAU,OACV,MAAO,kBACP,KAAM,sBACN,KAAM,sBACN,QAAS,yJACT,SAAU,iBACZ,EACO,MAAME,EAAwB,CACnC,UAAiBvB,EAAAwB,EAAA,CAAO,SAAS,MAC7B,SAAAxB,EAACyB,GAAY,UAAS,GACpB,WAACP,EAAS,CAAA,GAAG,MAAM,KAAMI,EAAK,KAC5B,SAACrB,EAAAiB,EAAS,QAAT,CACC,SAAA,CAAClB,EAAAkB,EAAS,MAAT,CAAe,GAAG,KAAK,SAAUI,EAAK,SAAU,MAAOA,EAAK,KAAO,CAAA,IACnEJ,EAAS,KAAT,CAAc,KAAMI,EAAK,KAAM,IAC/BJ,EAAS,QAAT,CAAiB,QAASI,EAAK,QAAS,IACxCJ,EAAS,SAAT,CAAkB,SAAUI,EAAK,SAAU,CAAA,EAC9C,CAAA,CACF,CACF,CAAA,EACF,CACJ,EACAC,EAAe,KAAO,CACpB,GAAGF,EAAQ,IACb,EACO,MAAMK,EAAuB,CAClC,OAAQ,IAAO1B,EAAA2B,EAAA,CAAU,QAAQ,OAC7B,SAAA3B,EAACwB,GAAO,SAAS,MACf,WAACC,EAAY,CAAA,OAAO,oBAAoB,UAAS,GAAC,UAAS,GACxD,SAAAG,EAAK,IAAI,CAAC,CACX,GAAAC,EACA,MAAArB,EACA,KAAAT,EACA,KAAAa,EACA,QAAAE,EACA,SAAAE,CAAA,IACKhB,EAAAkB,EAAA,CACD,SAACjB,EAAAiB,EAAS,QAAT,CACC,SAAA,CAAAlB,EAACkB,EAAS,MAAT,CAAe,MAAAV,EAAc,KAAAT,CAAY,CAAA,EACzCC,EAAAkB,EAAS,KAAT,CAAc,KAAAN,CAAY,CAAA,EAC1BZ,EAAAkB,EAAS,QAAT,CAAiB,QAAAJ,CAAkB,CAAA,EACnCd,EAAAkB,EAAS,SAAT,CAAkB,SAAAF,CAAoB,CAAA,CAAA,CACzC,CAAA,CANe,EAAAa,CAOjB,CAAW,CAAA,CACf,EACF,CACF,CAAA,CACJ,YACAR,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,KAAM,CACJ,IAAGS,EAAAT,EAAQ,aAAR,YAAAS,EAAoB,KACvB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAX,EAAQ,aAAR,YAAAW,EAAoB,OAApB,YAAAD,EAA0B,MAC/B,CACF,CACF,YACAR,EAAe,WAAa,CAC1B,GAAGA,EAAe,WAClB,KAAM,CACJ,IAAGO,EAAAP,EAAe,aAAf,YAAAO,EAA2B,KAC9B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAT,EAAe,aAAf,YAAAS,EAA2B,OAA3B,YAAAD,EAAiC,MACtC,CACF,CACF,YACAL,EAAc,WAAa,CACzB,GAAGA,EAAc,WACjB,KAAM,CACJ,IAAGI,EAAAJ,EAAc,aAAd,YAAAI,EAA0B,KAC7B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAN,EAAc,aAAd,YAAAM,EAA0B,OAA1B,YAAAD,EAAgC,MACrC,CACF,CACF"}