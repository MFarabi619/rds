{"version":3,"file":"HeroTextImage-7d179d22.js","sources":["../../src/components/Hero/HeroTextImage/HeroTextImage.Styles.tsx","../../src/components/Hero/HeroTextImage/HeroTextImageContent.tsx","../../src/components/Hero/HeroTextImage/HeroTextImage.tsx"],"sourcesContent":["export const styles = {\n  base: 'cu-hero-textimage not-contained not-prose mx-auto mb-12 grid gap-6 md:gap-10 lg:items-center',\n  border: 'border-b border-cu-black-50 pb-6 shadow-hero-text-image md:pb-10',\n  gridImageRight: 'md:grid-cols-split-60-40',\n  gridNoImage: 'md:grid-cols-split-80-20',\n  contentWrapper: 'order-2 grid gap-4 md:order-1 md:gap-8',\n  header: 'font-semibold md:leading-10 text-2xl sm:text-3xl md:text-4xl not-italic',\n  headerH1: 'lg:text-5xl lg:leading-[3.5rem]',\n  paragraph: 'text-lg font-light italic text-cu-black-600 md:text-2xl md:leading-9',\n  imageWrapper: 'order-1 md:order-2',\n  image: 'rounded bg-cover bg-no-repeat md:min-h-[260px]',\n  svg: 'hidden lg:block absolute -left-px top-0 z-10 h-full',\n  fullHeight: 'h-full',\n}\n","import React from 'react'\nimport { styles } from './HeroTextImage.Styles'\n\nexport interface HeroTextImageContentProps {\n  children?: React.ReactNode\n  title: string\n  paragraph?: string\n  headerSmall?: boolean\n  headerType?: 'h1' | 'h2'\n  image?: string\n  imageAngle?: boolean\n  focalPointX?: string\n  focalPointY?: string\n}\n\nconst mobileImageTypes = {\n  default: 'min-h-[220px]',\n  tall: 'min-h-[420px]',\n  square: 'min-h-[220px] aspect-square',\n}\n\nexport const HeroTextImageContent = ({\n  children,\n  title,\n  paragraph,\n  headerType = 'h2',\n  image,\n  imageAngle,\n  focalPointX = '50',\n  focalPointY = '50',\n}: HeroTextImageContentProps) => {\n  // Set background image\n  const imageUrl = image\n  const imagePadding = imageUrl ? 'md:py-8' : 'md:pt-6'\n\n  const inlineStyle = {\n    backgroundImage: `url(${imageUrl})`,\n    backgroundPosition: `${focalPointX}% ${focalPointY}%`,\n  }\n\n  return (\n    <>\n      <div className={`${styles.contentWrapper} ${imagePadding}`}>\n        {headerType === 'h1' && <h1 className={`${styles.header} ${styles.headerH1}`}>{title}</h1>}\n        {headerType === 'h2' && <h2 className={`${styles.header}`}>{title}</h2>}\n        {paragraph && <p className={styles.paragraph}>{paragraph}</p>}\n        {children}\n      </div>\n      {imageUrl && (\n        <div className={`relative ${mobileImageTypes.default} ${styles.imageWrapper} ${styles.fullHeight}`}>\n          <div\n            className={`relative ${mobileImageTypes.default} ${styles.image} ${styles.fullHeight}`}\n            style={inlineStyle}\n          >\n            {imageAngle && (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.svg} fill=\"none\" viewBox=\"0 0 123 440\">\n                <path\n                  fill=\"#fff\"\n                  d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n                />\n              </svg>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nHeroTextImageContent.displayName = 'HeroTextImage.Content'\n","import React from 'react'\nimport { rdsMaxWidth } from '../../../utils/optionClasses'\nimport { HeroTextImageContent } from './HeroTextImageContent'\nimport { styles } from './HeroTextImage.Styles'\n\nexport interface HeroTextImageProps {\n  children?: React.ReactNode\n  maxWidth?: 'full' | '5xl' | '7xl'\n  hasBorder?: boolean\n}\n\nexport const HeroTextImageWrapper = ({ children, hasBorder, maxWidth = '7xl' }: HeroTextImageProps) => {\n  const borderStyle = hasBorder ? styles.border : ''\n  const isWide = maxWidth === '7xl' ? styles.gridImageRight : styles.gridNoImage\n\n  return <div className={`${styles.base} ${rdsMaxWidth[maxWidth]} ${isWide} ${borderStyle}`}>{children}</div>\n}\n\nexport const HeroTextImage = Object.assign(HeroTextImageWrapper, {\n  Content: HeroTextImageContent,\n})\n"],"names":["styles","mobileImageTypes","HeroTextImageContent","children","title","paragraph","headerType","image","imageAngle","focalPointX","focalPointY","imageUrl","imagePadding","inlineStyle","jsxs","Fragment","jsx","HeroTextImageWrapper","hasBorder","maxWidth","borderStyle","isWide","rdsMaxWidth","HeroTextImage"],"mappings":"8FAAO,MAAMA,EAAS,CACpB,KAAM,+FACN,OAAQ,mEACR,eAAgB,2BAChB,YAAa,2BACb,eAAgB,yCAChB,OAAQ,0EACR,SAAU,kCACV,UAAW,uEACX,aAAc,qBACd,MAAO,iDACP,IAAK,sDACL,WAAY,QACd,ECEAC,EAAA,CAAyB,QAAA,gBACd,KAAA,gBACH,OAAA,6BAER,EAEOC,EAAA,CAAA,CAA8B,SAAAC,EACnC,MAAAC,EACA,UAAAC,EACA,WAAAC,EAAA,KACa,MAAAC,EACb,WAAAC,EACA,YAAAC,EAAA,KACc,YAAAC,EAAA,IAEhB,IAAA,CAEE,MAAAC,EAAAJ,EACAK,EAAAD,EAAA,UAAA,UAEAE,EAAA,CAAoB,gBAAA,OAAAF,KACM,mBAAA,GAAAF,MAAAC,IACe,EAGzC,OAAAI,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEID,EAAAA,KAAA,MAAA,CAAA,UAAA,GAAAd,EAAA,kBAAAY,IAAA,SAAA,CACGN,IAAA,MAAAU,EAAA,IAAA,KAAA,CAAA,UAAA,GAAAhB,EAAA,UAAAA,EAAA,WAAA,SAAAI,EAAA,EAAoFE,IAAA,MAAAU,MAAA,KAAA,CAAA,UAAA,GAAAhB,EAAA,SAAA,SAAAI,CAAA,CAAA,EACnBC,GAAAW,EAAAA,IAAA,IAAA,CAAA,UAAAhB,EAAA,UAAA,SAAAK,EAAA,EACTF,CACxD,EAAA,EACHQ,GAAAK,EAAA,IAAA,MAAA,CAAA,UAAA,YAAAf,EAAA,WAAAD,EAAA,gBAAAA,EAAA,aAAA,SAAAgB,EAAA,IAGI,MAAC,CAAA,UAAA,YAAAf,EAAA,WAAAD,EAAA,SAAAA,EAAA,aAC2E,MAAAa,EACnE,SAAAL,GAAAQ,EAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,UAAAhB,EAAA,IAAA,KAAA,OAAA,QAAA,cAAA,SAAAgB,EAAA,IAIH,OAAC,CAAA,KAAA,OACM,EAAA,0FACH,CAAA,EAAA,CAEN,CAAA,EAAA,CAGN,CAAA,CAAA,CAIR,EAEAd,EAAA,YAAA,m/BC1DO,MAAAe,EAAA,CAAA,CAAA,SAAAd,EAAA,UAAAe,EAAA,SAAAC,EAAA,KAAA,IAAA,CACL,MAAAC,EAAAF,EAAAlB,EAAA,OAAA,GACAqB,EAAAF,IAAA,MAAAnB,EAAA,eAAAA,EAAA,YAEA,OAAAgB,EAAAA,IAAA,MAAA,CAAA,UAAA,GAAAhB,EAAA,QAAAsB,EAAAH,CAAA,KAAAE,KAAAD,IAAA,SAAAjB,CAAA,CAAA,CACF,EAEOoB,EAAA,OAAA,OAAAN,EAAA,CAA0D,QAAAf,CAEjE,CAAA"}