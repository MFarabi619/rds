{"version":3,"file":"Description.stories-4c085b67.js","sources":["../../src/components/Description/Description.Styles.ts","../../src/components/Description/DescriptionAccordion.tsx","../../src/components/Description/DescriptionMeta.tsx","../../src/components/Description/Description.tsx","../../src/data/DescriptionData.ts"],"sourcesContent":["export const styles = {\n  base: `grid border-b border-cu-black-200`,\n  spacing: `pt-8 pb-8 md:pt-8 md:pb-8 first:pt-0`,\n  accordion: `pt-4 pb-3 md:pt-6 md:pb-5 first:border-t`,\n  accordionDef: `pb-4 pt-2`,\n  flexRow: `md:grid-cols-left-260 gap-2 md:gap-6`,\n  flexCol: `grid-row gap-2`,\n  button: `flex items-center w-full`,\n  chevron: `w-5 h-5 ml-auto text-cu-black-500 transition-transform`,\n  term: `font-semibold pb-2`,\n}\n","import { useState } from 'react'\nimport { styles } from './Description.Styles'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { proseStyles } from '../../utils/globalClasses'\n\nexport interface DescriptionAccordionProps {\n  term: string\n  children: React.ReactNode\n}\n\nexport const DescriptionAccordion = ({ term, children }: DescriptionAccordionProps) => {\n  const [ariaExpanded, setAriaExpanded] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [hidden, setHidden] = useState(true)\n\n  const onContentToggle = () => {\n    setAriaExpanded((current) => !current)\n    setCollapsed((current) => !current)\n    setHidden((current) => !current)\n  }\n\n  const termLabel = term.toLowerCase().replace(/ +/g, '-')\n\n  return (\n    <div className={`${styles.base} ${styles.accordion}`}>\n      <dt className={`${styles.term} ${proseStyles.base}`}>\n        <button className={styles.button} id={termLabel} aria-expanded={ariaExpanded} onClick={onContentToggle}>\n          {term}\n          <ChevronRightIcon className={`${styles.chevron} ${collapsed ? 'rotate-0' : 'rotate-90'}`} />\n        </button>\n      </dt>\n\n      <dd className={`${proseStyles.base} ${styles.accordionDef}`} hidden={hidden}>\n        {children}\n      </dd>\n    </div>\n  )\n}\n\nDescriptionAccordion.displayName = 'Description.Accordion'\n","import { styles } from './Description.Styles'\nimport { proseStyles } from '../../utils/globalClasses'\n\nexport interface DescriptionMetaProps {\n  term?: string\n  children: React.ReactNode\n  useColumns?: boolean\n}\n\nexport const DescriptionMeta = ({ term, children, useColumns }: DescriptionMetaProps) => {\n  const columns = useColumns ? styles.flexRow : styles.flexCol\n\n  return (\n    <div className={`${styles.base} ${columns} ${styles.spacing}`}>\n      <dt className={`${styles.term} ${proseStyles.base}`}>{term}</dt>\n      <dd className={proseStyles.base}>{children}</dd>\n    </div>\n  )\n}\n\nDescriptionMeta.displayName = 'Description.Meta'\n","import { DescriptionAccordion } from './DescriptionAccordion'\nimport { DescriptionMeta } from './DescriptionMeta'\n\nexport interface DescriptionProps {\n  children: React.ReactNode\n}\n\nexport const DescriptionWrapper = ({ children }: DescriptionProps) => {\n  return <dl className=\"cu-description\">{children}</dl>\n}\n\nexport const Description = Object.assign(DescriptionWrapper, {\n  Accordion: DescriptionAccordion,\n  Meta: DescriptionMeta,\n})\n","export const DescriptionData = [\n  {\n    id: 1,\n    term: 'Nobis voluptatem dolorum',\n    details:\n      'Praesentium architecto a distinctio aut reprehenderit ducimus. Perferendis excepturi delectus nihil voluptatem non.',\n  },\n  {\n    id: 2,\n    term: 'Lorem ipsum',\n    details:\n      'Aenean sit amet tortor pellentesque, posuere tellus vitae, sagittis justo. Vivamus imperdiet turpis nec elit ultricies, sed tempus diam dignissim.',\n  },\n  {\n    id: 3,\n    term: 'Molestiae quas dolores accusamus',\n    details:\n      'Vivamus imperdiet turpis nec elit ultricies, sed tempus diam dignissim. Suspendisse condimentum magna vel orci vulputate, eget vulputate neque porttitor.',\n  },\n]\n"],"names":["styles","DescriptionAccordion","term","children","ariaExpanded","setAriaExpanded","useState","collapsed","setCollapsed","hidden","setHidden","onContentToggle","current","termLabel","jsxs","jsx","proseStyles","ChevronRightIcon","DescriptionMeta","useColumns","columns","DescriptionWrapper","Description","DescriptionData"],"mappings":"gOAAO,MAAMA,EAAS,CACpB,KAAM,oCACN,QAAS,uCACT,UAAW,2CACX,aAAc,YACd,QAAS,uCACT,QAAS,iBACT,OAAQ,2BACR,QAAS,yDACT,KAAM,oBACR,ECAOC,EAAA,CAAA,CAAA,KAAAC,EAAA,SAAAC,KAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAAA,EAEAK,EAAA,IAAA,CACEN,EAAAO,GAAA,CAAAA,CAAA,EACAJ,EAAAI,GAAA,CAAAA,CAAA,EACAF,EAAAE,GAAA,CAAAA,CAAA,CAA+B,EAGjCC,EAAAX,EAAA,YAAA,EAAA,QAAA,MAAA,GAAA,EAEA,OAAAY,OAAA,MAAA,CAAA,UAAA,GAAAd,EAAA,IAAA,IAAAA,EAAA,SAAA,GAAA,SAAA,CAEIe,EAAAA,IAAA,KAAA,CAAA,UAAA,GAAAf,EAAA,IAAA,IAAAgB,EAAA,IAAA,GAAA,SAAAF,OAAA,SAAA,CAAA,UAAAd,EAAA,OAAA,GAAAa,EAAA,gBAAAT,EAAA,QAAAO,EAAA,SAAA,CAEKT,EAAAa,EAAAA,IAAAE,EAAA,CAAA,UAAA,GAAAjB,EAAA,OAAA,IAAAO,EAAA,WAAA,WAAA,EAAA,CAAA,CACyF,CAAA,CAAA,CAAA,CAAA,EAE9FQ,EAAAA,IAAA,KAAA,CAAA,UAAA,GAAAC,EAAA,IAAA,IAAAhB,EAAA,YAAA,GAAA,OAAAS,EAAA,SAAAN,CAAA,CAAA,CAIA,CAAA,CAAA,CAGN,EAEAF,EAAA,YAAA,kRC9BO,MAAAiB,EAAA,CAAA,CAAA,KAAAhB,EAAA,SAAAC,EAAA,WAAAgB,CAAA,IAAA,CACL,MAAAC,EAAAD,EAAAnB,EAAA,QAAAA,EAAA,QAEA,OAAAc,EAAA,KAAA,MAAA,CAAA,UAAA,GAAAd,EAAA,IAAA,IAAAoB,CAAA,IAAApB,EAAA,OAAA,GAAA,SAAA,CAEIe,EAAAA,IAAA,KAAA,CAAA,UAAA,GAAAf,EAAA,IAAA,IAAAgB,EAAA,IAAA,GAAA,SAAAd,CAAA,CAAA,EAA2Da,EAAA,IAAA,KAAA,CAAA,UAAAC,EAAA,KAAA,SAAAb,EAAA,CAChB,CAAA,CAAA,CAGjD,EAEAe,EAAA,YAAA,2VCbO,MAAAG,EAAA,CAAA,CAAA,SAAAlB,KACLY,EAAAA,IAAA,KAAA,CAAA,UAAA,iBAAA,SAAAZ,CAAA,CAAA,EAGKmB,EAAA,OAAA,OAAAD,EAAA,CAAsD,UAAApB,EAChD,KAAAiB,CAEb,CAAA,oOCdO,MAAMK,EAAkB,CAC7B,CACE,GAAI,EACJ,KAAM,2BACN,QACE,qHACJ,EACA,CACE,GAAI,EACJ,KAAM,cACN,QACE,oJACJ,EACA,CACE,GAAI,EACJ,KAAM,mCACN,QACE,2JACJ,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}