{"version":3,"file":"TextImage-d2afd766.js","sources":["../../src/components/TextImage/TextImage.Styles.tsx","../../src/components/TextImage/TextImageContent.tsx","../../src/components/TextImage/TextImagePeople.tsx","../../src/components/TextImage/TextImageEvent.tsx","../../src/components/TextImage/TextImage.tsx"],"sourcesContent":["export const styles = {\n  base: `flex flex-col lg:flex-row gap-6 mx-auto mb-6 cu-textimage lg:gap-10 not-contained md:mb-12`,\n  baseContent: ``,\n  border: `border-b border-cu-black-50 pb-6 shadow-hero-text-image md:pb-8`,\n  headerOne: `font-semibold text-3xl md:text-4xl lg:text-5xl lg:leading-[3.5rem] text-cu-black-700 not-prose`,\n  headerTwo: `font-semibold text-2xl md:text-3xl lg:text-4xl lg:leading-[3rem] text-cu-black-700 not-prose`,\n  underline: `relative mb-6 after:absolute after:w-10 after:h-px after:bottom-0 after:bg-cu-red after:left-px pb-6`,\n  contentWrapper: `flex-[0_0_100%] md:max-w-4xl md:flex-1 cu-textimage-content`,\n  pronoun: 'text-xl lg:text-3xl font-light lowercase text-cu-black-500',\n  listLink: 'font-semibold text-cu-red hover:underline',\n}\n\nexport const mediaStyles = {\n  mediaWrapper: `relative flex-1 overflow-hidden rounded`,\n  mediaBgImage: `relative flex-1 w-full h-full bg-no-repeat bg-cover min-h-[360px] lg:min-h-[220px]`,\n  svgLeft: `hidden lg:block absolute -left-px top-0 z-10 h-full`,\n  svgRight: `hidden lg:block absolute -right-px top-0 z-10 h-full transform scale-[-1]`,\n}\n\nexport const socialStyles = {\n  flex: 'flex items-center gap-6',\n  link: 'text-cu-black-400',\n  icon: 'w-6 h-6 md:w-8 md:h-8',\n}\n","import React from 'react'\nimport { styles, mediaStyles } from './TextImage.Styles'\nimport { proseGroups } from '../../utils/globalClasses'\n\nexport interface TextImageContentProps {\n  children?: React.ReactNode\n  title?: string\n  headerType?: 'h1' | 'h2'\n  isCenter?: boolean\n}\n\nexport interface TextImageMediaProps {\n  imageUrl?: string\n  contentWidth?: number\n  imageZoom?: number\n  angle?: 'left' | 'dual' | 'none'\n  focalPointX?: string\n  focalPointY?: string\n  hasMobileImage?: boolean\n}\n\nexport const TextImageContent = ({\n  children,\n  title,\n  headerType = 'h2',\n  isCenter,\n  imageUrl,\n  contentWidth = 50,\n  imageZoom = 0,\n  angle,\n  focalPointX = '50',\n  focalPointY = '50',\n  hasMobileImage,\n}: TextImageContentProps & TextImageMediaProps) => {\n  // Spacing and alignment\n  const contentPadding = imageUrl ? 'md:py-4' : ''\n  const verticallyCenter = isCenter ? 'justify-center' : ''\n\n  // Image options\n  let hasImage\n  let noImageOnMobile\n  let inlineContentStyles\n  let inlineImageStyles\n\n  if (imageUrl) {\n    hasImage = mediaStyles.mediaBgImage || ''\n    noImageOnMobile = hasMobileImage ? '' : 'hidden lg:block'\n\n    if (hasImage) {\n      inlineContentStyles = {\n        flex: `0 0 ${contentWidth}%`,\n      }\n\n      inlineImageStyles = {\n        backgroundImage: `url(${imageUrl})`,\n        backgroundPosition: `${focalPointX}% ${focalPointY}%`,\n        transform: `scale(1.${imageZoom})`,\n      }\n    }\n  }\n\n  // Image angle\n  let leftSvg = null\n  let rightSvg = null\n\n  switch (angle) {\n    case 'left':\n      leftSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgLeft} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      break\n    case 'dual':\n      leftSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgLeft} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      rightSvg = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={mediaStyles.svgRight} fill=\"none\" viewBox=\"0 0 123 440\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 440h6c-4.4 0-4.5-3-3.5-6C49.344 293.466 118.06 4.849 119 2.5c1-2.5 3-2.5 4-2.5H0v440Z\"\n          />\n        </svg>\n      )\n      break\n    default:\n      break\n  }\n\n  return (\n    <>\n      <div\n        className={`${styles.contentWrapper} ${contentPadding} ${verticallyCenter} ${\n          headerType === 'h1'\n            ? `cu-textimage-as-h1 ${proseGroups.largeLight}`\n            : `cu-textimage-as-h2 ${proseGroups.text}`\n        }`}\n        style={inlineContentStyles}\n      >\n        {title && headerType === 'h1' && <h1 className={`${styles.headerOne} ${styles.underline}`}>{title}</h1>}\n        {title && headerType === 'h2' && <h2 className={`${styles.headerTwo} ${styles.underline}`}>{title}</h2>}\n        {children}\n      </div>\n\n      {imageUrl && (\n        <div className={`${mediaStyles.mediaWrapper} ${noImageOnMobile}`}>\n          <div className={`${mediaStyles.mediaBgImage}`} style={inlineImageStyles}></div>\n          {leftSvg}\n          {rightSvg}\n        </div>\n      )}\n    </>\n  )\n}\n\nTextImageContent.displayName = 'TextImage.Content'\n","import { styles, socialStyles } from './TextImage.Styles'\nimport { proseGroups } from '../../utils/globalClasses'\nimport { Button } from '../Button/Button'\n\nexport interface TextImagePeopleProps {\n  children?: React.ReactNode\n  designation?: string\n  name: string\n  jobTitle?: string\n  pronoun?: string\n  degrees?: string\n  building?: string\n  room?: string\n  email?: string\n  phone?: string\n  phoneExt?: string\n}\n\nexport interface TextImageSocialProps {\n  resume?: string\n  linkedin?: string\n  twitter?: string\n  facebook?: string\n}\n\nexport const TextImagePeople = ({\n  children,\n  designation,\n  name,\n  jobTitle,\n  pronoun,\n  ...restProps\n}: TextImagePeopleProps & TextImageSocialProps) => {\n  const { degrees, building, room, email, phone, phoneExt, resume, linkedin, twitter, facebook } = restProps\n  const profileDetails = ['degrees', 'building', 'room', 'email', 'phone', 'phoneExt']\n  const socialDetails = ['resume', 'linkedin', 'twitter', 'facebook']\n  const contentPadding = children ? 'md:py-4' : ''\n\n  return (\n    <>\n      <div className={`flex-1 ${contentPadding} space-y-4`}>\n        <h1 className={`${styles.headerOne} ${styles.underline}`}>\n          {designation && `${designation} `}\n          {name} {pronoun && <span className={styles.pronoun}>({pronoun})</span>}\n        </h1>\n\n        {jobTitle && <p className={proseGroups.largeLight}>{jobTitle}</p>}\n\n        {/* Check if details are set and output as ul */}\n        {Object.values(profileDetails).some((info) => info) && (\n          <ul>\n            {degrees && <li>{degrees}</li>}\n            {building && (\n              <li>\n                {room && `${room} `}\n                {building}\n              </li>\n            )}\n            {email && (\n              <li>\n                <a className={styles.listLink} href={`mailto:${email}`}>\n                  {email}\n                </a>\n              </li>\n            )}\n            {phone && (\n              <li>\n                {phone}\n                {phoneExt && ` x${phoneExt}`}\n              </li>\n            )}\n          </ul>\n        )}\n\n        {/* Check is socials are set and render div */}\n        {Object.values(socialDetails).some((info) => info) && (\n          <div className={socialStyles.flex}>\n            {resume && (\n              <Button\n                isSmall\n                color=\"grey\"\n                onClick={() => {\n                  window.location.href = resume\n                }}\n                title=\"Resume\"\n              />\n            )}\n            <ul className={socialStyles.flex}>\n              {linkedin && (\n                <li>\n                  <a className={`${socialStyles.link} hover:text-[#0072b1]`} href={linkedin}>\n                    <span className=\"sr-only\">View on LinkedIn</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 448 512\"\n                      fill=\"currentColor\"\n                      className={socialStyles.icon}\n                      aria-hidden=\"true\"\n                    >\n                      <path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\" />\n                    </svg>\n                  </a>\n                </li>\n              )}\n\n              {twitter && (\n                <li>\n                  <a className={`${socialStyles.link} hover:text-[#00acee]`} href={linkedin}>\n                    <span className=\"sr-only\">View on Twitter</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 512 512\"\n                      fill=\"currentColor\"\n                      className={socialStyles.icon}\n                      aria-hidden=\"true\"\n                    >\n                      <path d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\" />\n                    </svg>\n                  </a>\n                </li>\n              )}\n\n              {facebook && (\n                <li>\n                  <a className={`${socialStyles.link} hover:text-[#3b5998]`} href={linkedin}>\n                    <span className=\"sr-only\">View on Facebook</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 512 512\"\n                      fill=\"currentColor\"\n                      className={socialStyles.icon}\n                      aria-hidden=\"true\"\n                    >\n                      <path d=\"M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z\" />\n                    </svg>\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      {children && (\n        <div className=\"flex-none cu-textimage-people w-28 h-28 sm:w-48 sm:h-48 md:w-72 md:h-72 lg:w-96 lg:h-96\">\n          <div className=\"overflow-hidden rounded-lg\">{children}</div>\n        </div>\n      )}\n    </>\n  )\n}\n\nTextImagePeople.displayName = 'TextImage.People'\n","import { styles } from './TextImage.Styles'\nimport { proseGroups } from '../../utils/globalClasses'\nimport { Button } from '../Button/Button'\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup'\n\nexport interface TextImageEventProps {\n  children?: React.ReactNode\n  title: string\n  startDate?: string\n  endDate?: string\n  eventType: 'In-Person' | 'Virtual' | 'Hybrid'\n  location?: string\n  virtualType?: 'Teams' | 'Zoom'\n  virtualUrl?: string\n  primaryButtonUrl?: string\n  primaryButtonText?: string\n  secondaryButtonUrl?: string\n  secondaryButtonText?: string\n  cost?: string\n  contactName?: string\n  contactPhone?: string\n  contactEmail?: string\n}\n\nexport const TextImageEvent = ({\n  children,\n  title,\n  startDate,\n  endDate,\n  eventType,\n  location,\n  virtualType,\n  virtualUrl,\n  cost,\n  contactName,\n  contactPhone,\n  contactEmail,\n  primaryButtonUrl,\n  primaryButtonText,\n  secondaryButtonUrl,\n  secondaryButtonText,\n}: TextImageEventProps) => {\n  const eventDetails = ['cost', 'contactName', 'contactPhone', 'contactEmail']\n\n  return (\n    <>\n      <div className=\"flex-1 space-y-4 md:py-4\">\n        <h1 className={`${styles.headerOne} ${styles.underline}`}>{title}</h1>\n\n        {startDate && <p className={proseGroups.largeLight}>{startDate}</p>}\n        {endDate && <p className={proseGroups.largeLight}>{endDate}</p>}\n\n        {/* Check if details are set and output as ul */}\n        <ul>\n          <li>\n            <strong className=\"font-semibold\">{eventType} Event</strong>\n          </li>\n          {(eventType === 'In-Person' || eventType === 'Hybrid') && location && <li>{location}</li>}\n          {(eventType === 'Virtual' || eventType === 'Hybrid') && virtualType && virtualUrl && (\n            <li>\n              <a className={styles.listLink} href={virtualUrl}>\n                {virtualType} meeting link\n              </a>\n            </li>\n          )}\n          {(eventType === 'Virtual' || eventType === 'Hybrid') && virtualType && !virtualUrl && (\n            <li>Meeting link is not yet available</li>\n          )}\n        </ul>\n\n        {/* Check is socials are set and render div */}\n        {Object.values(eventDetails).some((info) => info) && (\n          <ul>\n            {cost && (\n              <li>\n                <strong className=\"font-semibold\">Cost: </strong>\n                {cost}\n              </li>\n            )}\n            {contactName && (\n              <li>\n                <strong className=\"font-semibold\">Contact: </strong>\n                {contactName && <> {contactName}</>}\n                {contactEmail && (\n                  <>\n                    {' | '}\n                    <a className={styles.listLink} href={`mailto:${contactEmail}`}>\n                      {contactEmail}\n                    </a>\n                  </>\n                )}\n                {contactPhone && <> | {contactPhone}</>}\n              </li>\n            )}\n          </ul>\n        )}\n\n        {primaryButtonUrl && (\n          <ButtonGroup>\n            {primaryButtonUrl && (\n              <Button\n                isSmall\n                onClick={() => {\n                  if (typeof primaryButtonUrl === 'string') {\n                    window.location.href = primaryButtonUrl\n                  }\n                }}\n                title={primaryButtonText ? primaryButtonText : 'Register Now'}\n              />\n            )}\n            {secondaryButtonUrl && secondaryButtonText && (\n              <Button\n                isSmall\n                color=\"grey\"\n                onClick={() => {\n                  if (typeof secondaryButtonUrl === 'string') {\n                    window.location.href = secondaryButtonUrl\n                  }\n                }}\n                title={secondaryButtonText}\n              />\n            )}\n          </ButtonGroup>\n        )}\n      </div>\n\n      {startDate && (\n        <div className=\"flex-none w-28 h-28 sm:w-48 sm:h-48 md:w-72 md:h-72 lg:w-96 lg:h-96\">\n          <div className=\"overflow-hidden rounded-lg\">{children}</div>\n        </div>\n      )}\n    </>\n  )\n}\n\nTextImageEvent.displayName = 'TextImage.Event'\n","import React from 'react'\nimport { TextImageContent } from './TextImageContent'\nimport { TextImagePeople } from './TextImagePeople'\nimport { TextImageEvent } from './TextImageEvent'\nimport { rdsMaxWidth, rdsFlexRow } from '../../utils/optionClasses'\nimport { styles } from './TextImage.Styles'\n\nexport interface TextImageProps {\n  children?: React.ReactNode\n  maxWidth?: '5xl' | '7xl' | 'max'\n  flexRow?: 'md' | 'lg'\n  hasBorder?: boolean\n  flipX?: boolean\n  flipYsm?: boolean\n}\n\nexport const TextImageWrapper = ({\n  children,\n  maxWidth = '5xl',\n  flexRow = 'lg',\n  hasBorder,\n  flipX,\n  flipYsm,\n}: TextImageProps) => {\n  const flipXLayout = flipX ? 'lg:flex-row-reverse' : ''\n  const flipYsmLayout = flipYsm ? 'flex-col-reverse sm:flex-row' : ''\n  const borderStyle = hasBorder ? styles.border : ''\n\n  return (\n    <div\n      className={`${styles.base} ${rdsMaxWidth[maxWidth]} ${rdsFlexRow[flexRow]} ${flipXLayout} ${flipYsmLayout} ${borderStyle}`}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport const TextImage = Object.assign(TextImageWrapper, {\n  Content: TextImageContent,\n  People: TextImagePeople,\n  Event: TextImageEvent,\n})\n"],"names":["styles","mediaStyles","socialStyles","TextImageContent","children","title","headerType","isCenter","imageUrl","contentWidth","imageZoom","angle","focalPointX","focalPointY","hasMobileImage","contentPadding","verticallyCenter","hasImage","noImageOnMobile","inlineContentStyles","inlineImageStyles","leftSvg","rightSvg","jsx","jsxs","Fragment","proseGroups","TextImagePeople","designation","name","jobTitle","pronoun","restProps","degrees","building","room","email","phone","phoneExt","resume","linkedin","twitter","facebook","profileDetails","socialDetails","info","Button","TextImageEvent","startDate","endDate","eventType","location","virtualType","virtualUrl","cost","contactName","contactPhone","contactEmail","primaryButtonUrl","primaryButtonText","secondaryButtonUrl","secondaryButtonText","eventDetails","ButtonGroup","TextImageWrapper","maxWidth","flexRow","hasBorder","flipX","flipYsm","flipXLayout","flipYsmLayout","borderStyle","rdsMaxWidth","rdsFlexRow","TextImage"],"mappings":"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"}