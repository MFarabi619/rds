import{j as e}from"./jsx-runtime-X2b_N9AH.js";import{r as a}from"./index-uCp2LrAq.js";import{B as c}from"./Button-BbqjxLtd.js";import{B as j}from"./ButtonGroup-D-bd2cm2.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Icon-CS9Mqat_.js";import"./optionClasses-C1xmOtGn.js";const d=({children:s,title:t,description:p,isOpen:r,setIsOpen:m})=>{const i=a.useRef(null);a.useEffect(()=>{var l,u,g,f;(l=i.current)!=null&&l.open&&!r?(u=i.current)==null||u.close():!((g=i.current)!=null&&g.open)&&r&&((f=i.current)==null||f.showModal())},[r]),a.useEffect(()=>(r?document.body.classList.add("cu-no-body-scroll"):document.body.classList.remove("cu-no-body-scroll"),()=>{document.body.classList.remove("cu-no-body-scroll")}),[r]);const b=l=>{l.target===i.current&&m(!0)};return e.jsxs("dialog",{ref:i,className:"cu-dialog z-10 not-prose w-11/12 md:w-full md:min-w-96 md:max-w-md shadow-md rounded-md p-3.5",onClick:b,children:[e.jsxs("div",{className:"p-3",children:[e.jsx("h3",{className:"text-lg font-medium leading-6 text-gray-900 mb-3",children:t}),p&&e.jsx("p",{className:"text-sm text-gray-500 mb-3",children:p})]}),e.jsxs(j,{align:"right",gap:3,children:[s,e.jsx(c,{onClick:()=>{m(!1)},title:"Close",isSmall:!0,color:"grey"})]})]})};d.__docgenInfo={description:"",methods:[],displayName:"Dialog",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},title:{required:!0,tsType:{name:"string"},description:""},description:{required:!1,tsType:{name:"string"},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},setIsOpen:{required:!0,tsType:{name:"signature",type:"function",raw:"(k: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"k"}],return:{name:"void"}}},description:""}}};const I={title:"Components/Dialog",component:d,tags:["autodocs"],parameters:{controls:{sort:"requiredFirst"}}},o=()=>{const[s,t]=a.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(c,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>t(!0)}),e.jsx(d,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:s,setIsOpen:t})]})};o.storyName="Default Dialog";const n=()=>{const[s,t]=a.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(c,{id:"modalButton",title:" Click to Open Dialog",onClick:()=>t(!0)}),e.jsx(d,{title:"Dialog Title",description:"Description inside the dialog box",isOpen:s,setIsOpen:t,children:e.jsx(c,{title:"Confirm",isSmall:!0})})]})};o.storyName="Default Dialog";n.storyName="With Confirm Button";o.__docgenInfo={description:"",methods:[],displayName:"Default"};n.__docgenInfo={description:"",methods:[],displayName:"ConfirmButton"};var D,x,O;o.parameters={...o.parameters,docs:{...(D=o.parameters)==null?void 0:D.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />
      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen} />
    </>;
}`,...(O=(x=o.parameters)==null?void 0:x.docs)==null?void 0:O.source}}};var h,y,C;n.parameters={...n.parameters,docs:{...(h=n.parameters)==null?void 0:h.docs,source:{originalSource:`() => {
  const [DialogOpen, setDialogOpen] = useState(false);
  return <>
      <Button id="modalButton" title=" Click to Open Dialog" onClick={() => setDialogOpen(true)} />
      <Dialog title="Dialog Title" description={'Description inside the dialog box'} isOpen={DialogOpen} setIsOpen={setDialogOpen}>
        <Button title="Confirm" isSmall />
      </Dialog>
    </>;
}`,...(C=(y=n.parameters)==null?void 0:y.docs)==null?void 0:C.source}}};const R=["Default","ConfirmButton"];export{n as ConfirmButton,o as Default,R as __namedExportsOrder,I as default};
