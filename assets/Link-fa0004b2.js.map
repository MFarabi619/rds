{"version":3,"mappings":"+HAkBO,MAAAA,EAAAC,EAAA,WAAa,EAEhB,KAAAC,EACE,GAAAC,EACA,SAAAC,EACA,SAAAC,EACA,QAAAC,EACA,QAAAC,EACA,OAAAC,EACA,OAAAC,EACA,UAAAC,EACA,QAAAC,EACA,aAAAC,EACA,aAAAC,CACA,EAAAC,IAAA,CAIF,MAAAC,EAAAC,CAAA,EAAAC,EAAA,WACAC,EAAA,CAAmB,KAAAhB,EACjB,GAAAC,EACA,SAAAE,EACA,QAAAC,EACA,QAAAC,EACA,OAAAC,EACA,OAAAC,EACA,UAAAC,EACA,QAAAC,EACA,aAAAC,EACA,aAAAC,CACA,EAGFM,mBAAA,KACE,eAAAC,GAAA,CACE,IACE,MAAAC,EAAA,MAAAC,EAAA,4CACAN,EAAAO,EAAA,IAAAF,EAAA,KAAAP,EAAA,GAAAI,EAAA,SAAAd,CAAA,EAGE,CACF,OAEAY,EAAAO,EAAA,aAAAT,EAAA,GAAAI,EAAA,SAAAd,CAAA,EAGE,CACF,CACF,CAGFgB,GAAS,MAGXG,EAAA,IAAAC,EAAA,mBAAAT,CAAA,EAAkB,CAEtB,EAEAf,EAAA","names":["Link","forwardRef","href","as","children","prefetch","replace","shallow","scroll","locale","className","onClick","onMouseEnter","onTouchStart","ref","rdsLink","setRdsLink","useState","LinkParams","useEffect","loadLink","NextLink","__vitePreload","jsx","Fragment"],"sources":["../../src/components/Link/Link.tsx"],"sourcesContent":["import React, { forwardRef, PropsWithChildren, useEffect, useState } from 'react'\n\nexport interface LinkProps {\n  href?: string | undefined\n  as?: string | undefined\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n  legacyBehavior?: boolean\n  className?: string\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\nexport const Link = forwardRef<HTMLAnchorElement, PropsWithChildren<LinkProps>>(\n  (\n    {\n      href,\n      as,\n      children,\n      prefetch,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      className,\n      onClick,\n      onMouseEnter,\n      onTouchStart,\n    }: PropsWithChildren<LinkProps>,\n    ref,\n  ) => {\n    const [rdsLink, setRdsLink] = useState<React.ReactNode>()\n    const LinkParams = {\n      href,\n      as,\n      prefetch,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      className,\n      onClick,\n      onMouseEnter,\n      onTouchStart,\n    }\n\n    useEffect(() => {\n      async function loadLink() {\n        try {\n          const NextLink = await import(`next/${'link'}`)\n          setRdsLink(\n            <NextLink ref={ref} {...LinkParams}>\n              {children}\n            </NextLink>,\n          )\n        } catch (error) {\n          setRdsLink(\n            <a ref={ref} {...LinkParams}>\n              {children}\n            </a>,\n          )\n        }\n      }\n\n      loadLink()\n    }, [])\n\n    return <>{rdsLink}</>\n  },\n)\n\nLink.displayName = 'Link'\n"],"file":"assets/Link-fa0004b2.js"}