{"version":3,"file":"Table.stories-7a2623d2.js","sources":["../../src/components/Table/TableData.ts","../../src/components/Table/TableHeader.tsx","../../src/components/Table/TableRows.tsx","../../src/hooks/useSortableTable.tsx","../../src/components/Table/Table.styles.tsx","../../src/components/Table/Table.tsx"],"sourcesContent":["export interface TableDataProps {\n  [k: string]: string | number | JSX.Element\n}\n\nexport const TableData: TableDataProps[] = [\n  {\n    id: 1,\n    title: 'Title 1',\n  },\n  {\n    id: 2,\n    title: 'Title 2',\n  },\n  {\n    id: 3,\n    title: 'Title 3',\n  },\n  {\n    id: 4,\n    title: 'Title 4',\n  },\n  {\n    id: 5,\n    title: 'Aitle 5',\n  },\n]\n","import { useState } from 'react'\nimport { ChevronUpDownIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/20/solid'\nimport { ColumnDefinitionType } from './Table'\n\ninterface TableHeaderProps {\n  columns: ColumnDefinitionType[]\n  sortData: (a: string, s: boolean) => void\n}\n\nconst styles = {\n  core: `py-3.5 pl-3 pr-3 text-left text-sm font-semibold text-cu-black-900 `,\n  thead: `bg-gray-100 `,\n  sortable: `hover:cursor `,\n}\n\nconst TableHeader = ({ columns, sortData }: TableHeaderProps) => {\n  const [ascending, setAscending] = useState(true)\n  const [active, setActive] = useState('')\n\n  const handleSortChange = (key: string) => {\n    const activeColumn = key\n    let asc = true\n\n    if (key === active) {\n      asc = !ascending\n    }\n\n    setActive(activeColumn)\n    setAscending(asc)\n    sortData(activeColumn, asc)\n  }\n\n  const headers = columns.map((column: ColumnDefinitionType, index) => {\n    const sortableStyles = column?.sort?.sortable ? 'hover:cursor-pointer' : 'hover:cursor-auto'\n\n    return (\n      <th\n        scope=\"col\"\n        key={`headerCell-${index}`}\n        className={`${styles.core} ${sortableStyles}`}\n        onClick={() => (column?.sort?.sortable ? handleSortChange(column.key) : undefined)}\n        aria-sort={\n          column.key === active && ascending\n            ? 'descending'\n            : column.key === active && !ascending\n            ? 'ascending'\n            : undefined\n        }\n        aria-label={column?.sort?.sortable ? 'Sort by ' + column.key : undefined}\n      >\n        {column.sort?.sortable ? (\n          <div className=\"flex items-center\">\n            <div>{column.header}</div>\n            {column.key === active && ascending ? (\n              <ChevronDownIcon className=\"ml-2 inline-block h-4 w-4\" />\n            ) : column.key === active && !ascending ? (\n              <ChevronUpIcon className=\"ml-2 inline-block h-4 w-4\" />\n            ) : (\n              <ChevronUpDownIcon className=\"ml-2 inline-block h-4 w-4\" />\n            )}\n          </div>\n        ) : (\n          column.header\n        )}\n      </th>\n    )\n  })\n\n  return (\n    <thead className={styles.thead}>\n      <tr>{headers}</tr>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import { ColumnDefinitionType } from './Table'\n\ntype TableRowsProps = {\n  data: {\n    [k: string]: string | number | JSX.Element\n  }[]\n  columns: ColumnDefinitionType[]\n  striped: boolean\n  range: number[]\n}\n\nconst styles = {\n  core: `whitespace-nowrap px-3 py-4 text-sm text-cu-black-600`,\n  tbody: `divide-y divide-gray-200 bg-white`,\n}\n\nconst TableRows = ({ data, columns, striped, range }: TableRowsProps) => {\n  const stripedStyles = striped ? 'odd:bg-white even:bg-gray-50' : 'hover:bg-blue-50'\n  const rows = data.slice(range[0] - 1, range[1]).map((row, index) => {\n    return (\n      <tr\n        className={`${stripedStyles} [&>td]:border-cu-gray-100 [&>td]:border-b [&>td]:last:border-0`}\n        key={`row-${index}`}\n      >\n        {columns.map((column, index2) => {\n          return (\n            <td key={`cell-${index2}`} className={`${styles.core}`}>\n              <>{row[column.key]}</>\n            </td>\n          )\n        })}\n      </tr>\n    )\n  })\n\n  return <tbody className={styles.tbody}>{rows}</tbody>\n}\n\nexport default TableRows\n","import { useState, useEffect } from 'react'\n\ninterface DataProps {\n  [k: string]: string | number | JSX.Element\n}\n\nexport const useSortableTable = (data: DataProps[]) => {\n  const [tableData, setTableData] = useState(data)\n  useEffect(() => {\n    setTableData(data)\n  }, [data])\n\n  const sortTableData = (orderBy: string, asc: boolean) => {\n    if (orderBy) {\n      const sortedData = [...tableData].sort((a, b) => {\n        if (a[orderBy] === null) return 1\n        if (b[orderBy] === null) return -1\n        if (a[orderBy] === null && b[orderBy] === null) return 0\n        return (\n          a[orderBy].toString().localeCompare(b[orderBy].toString(), 'en', {\n            numeric: true,\n          }) * (asc ? 1 : -1)\n        )\n      })\n      setTableData(sortedData)\n    }\n  }\n\n  return [tableData, sortTableData] as const\n}\n","const styles = {\n  core: `min-w-full overflow-hidden border-collapse border-separate rounded-lg not-prose border-spacing-0`,\n  shadow: `shadow-lg`,\n  border: `border border-cu-black-100`,\n}\nexport default styles\n","import TableHeader from './TableHeader'\nimport TableRows from './TableRows'\nimport { useSortableTable } from '../../hooks/useSortableTable'\nimport styles from './Table.styles'\n\nexport interface ColumnDefinitionType {\n  key: string\n  header: string\n  sort?: { sortable: boolean }\n}\n\nexport interface TableProps {\n  data: {\n    [k: string]: string | number | JSX.Element\n  }[]\n  columns: ColumnDefinitionType[]\n  hasStripes?: boolean\n  hasShadow?: boolean\n  hasBorder?: boolean\n  range?: number[]\n}\n\nexport const Table = ({ data, columns, hasStripes = false, hasShadow, hasBorder, range = [1, -1] }: TableProps) => {\n  const [tableData, setTableData] = useSortableTable(data)\n  const borderStyle = hasBorder ? styles.border : ''\n  const shadowStyle = hasShadow ? styles.shadow : ''\n\n  return (\n    <table className={`${styles.core} ${borderStyle} ${shadowStyle}`}>\n      <TableHeader columns={columns} sortData={setTableData} />\n      <TableRows data={tableData} columns={columns} striped={hasStripes} range={range} />\n    </table>\n  )\n}\n"],"names":["TableData","styles","TableHeader","columns","sortData","ascending","setAscending","useState","active","setActive","handleSortChange","key","activeColumn","asc","headers","column","index","sortableStyles","_a","jsx","_b","_c","jsxs","ChevronDownIcon","ChevronUpIcon","ChevronUpDownIcon","TableRows","data","striped","range","stripedStyles","rows","row","index2","Fragment","useSortableTable","tableData","setTableData","useEffect","orderBy","sortedData","a","b","Table","hasStripes","hasShadow","hasBorder","borderStyle","shadowStyle"],"mappings":"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"}